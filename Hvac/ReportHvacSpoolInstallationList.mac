/* $Id: ReportHvacSpoolInstallationList.mac,v1.0.0 2016/04/07 Wallis.liu $ */

/*
**	this script use for hvac spool report.
*/

#include "include/dmutil.h"
#include "include/win.h"
#include "include/win_panel.h"
#include "include/PmMgeTags.h"
#include "include/pm.h"
#include "include/pm_errors.h"
#include "include/dm_errors.h"
#include "include/pm_drawings.h"
#include "include/pm_core_tags.h"
#include "include/array.mac"
#include "include/cos.h"
#include "include/dw.h"
#include "include/pm_annot.h"
#include "include/dm_cos_schema.h"
#include "include/geoutils.h"
#include "include/PmPipingUtils.h"
#include "opt/pm/EloTools/include/viewutilsELO.h"
#include "include/g2d_ext2df.h"
#include "include/quants.h"
#include "include/pi_math.mac" 
#include "include/pi.h"

global int     Debug = 1; 

#include "$MarineToolkit/Hvac/HspoolProdInfo.h"
#include "$MarineToolkit/Include/String_Utility.h"
#include "$MarineToolkit/Include/Common_Utility.h"
#include "$MarineToolkit/Include/Grid_Utility.h"
#include "$MarineToolkit/Include/Math_Utility.h"
#include "$MarineToolkit/Include/Piping_Utility.h"

/*
**define size of array
*/

#define  Report_Column_Number   9      /*风管*/
#define  Report2_Column_Number  8      /*附件*/

/*
**定义界面语言
**define interface language
*/
global handle  Block_Name,PlanningUnit,OutfitArea;
global handle  DisplayGrid;
global handle  NULL_HANDLE = 0;
global int      Grid_SelectedItem = 0;
global int      Grid_SortColumn = -1;
global int      Grid_SortDirection = 1;
global handle  Spool_List;          	/*管段handle列表*/
global int      Spool_Number=0;          /*管段数量*/
global handle  Valve_List;				/*阀件handle列表*/
global int      Valve_Number=0;			/*阀件数量*/
global handle  Report_Info;				/*报表信息列表*/
global handle  Report_Objects;          /*保存报表行对应的管段*/
global handle  Report2_Info;		    /*报表信息列表*/
global handle  Report2_Objects;			/*保存报表行对应的附件*/
global int      Report_Row_Number = 0;	/*报表行数*/
global int	   Report2_Row_Number = 0;  /*报表行数*/
global handle  High_Light_List;         /*模型加亮列表*/
global handle  Selected_Objects;
global int      Selected_Objects_Number = 0;
global int      AutoScale = 0;
global int      AutoHighLight = 0;
global handle  MainWindow;
global handle  Grid_Title,Grid_Title2;
global int      Maximum_Report_Row_Number = 1000;
global handle  Report_Path,Report_Template;
global string   DataFileName = "C:\\TEMP\\hvac_installation_report.txt";
global handle  Summary;
global handle  wobj;
global int      Total_Number = 0;
global int	   Report_Type = 0;
global int 	   Grid_Column_Number = 9;
/*
**初始化相关对象
*/
init()
{	
	Report_Info = alloc_2darray(1,1);
	Report_Objects = A_ALLOC(1);
    
	Report2_Info = alloc_2darray(1,1);
	Report2_Objects = A_ALLOC(1);
    
	Summary = alloc_2darray(1,1);

	/*初始化模型集合*/
	Spool_List = PM_INIT_SET();

	/*初始化加亮模型集合*/
	High_Light_List = PM_INIT_SET();
	
	/*初始化选中的模型集合*/
	Selected_Objects = PM_INIT_SET();
	
	W_SET_PANELITEM_ARGS(Report_Path, W_PANEL_VALUE, "C:/TEMP/");
	
	W_SET_PANELITEM_ARGS(Report_Template, W_PANEL_VALUE, "P:/报表模板/风管安装托盘表.xlsx");
}

init0()
{	
	Grid_Title = A_ALLOC(Report_Column_Number, "STRING");
	A_PUT(Grid_Title,0,"区域");
	A_PUT(Grid_Title,1,"托盘");
	A_PUT(Grid_Title,2,"管件号");
	A_PUT(Grid_Title,3,"规格");
	A_PUT(Grid_Title,4,"表面处理");
	A_PUT(Grid_Title,5,"数量");
    A_PUT(Grid_Title,6,"单位");
	A_PUT(Grid_Title,7,"面积");
    A_PUT(Grid_Title,8,"重量");
    
	Grid_Title2 = A_ALLOC(Report2_Column_Number, "STRING");
	A_PUT(Grid_Title2,0,"区域");
	A_PUT(Grid_Title2,1,"托盘");
	A_PUT(Grid_Title2,2,"附件编号");
	A_PUT(Grid_Title2,3,"名称");
	A_PUT(Grid_Title2,4,"规格");
	A_PUT(Grid_Title2,5,"数量");
    A_PUT(Grid_Title2,6,"单位");
	A_PUT(Grid_Title2,7,"重量");
}


/*
**Get the selected objects in grid
*/
get_selected_items()
{
	PM_SETOP_SUB(Selected_Objects, Selected_Objects);
	selected_rows = W_GET_WINDOW_ARG( wobj, W_LISTW_MSVALUE );
	total_lines = STRLEN(selected_rows);
	k = 0;
	for (i = 0; i < total_lines; i = i + 1){
		temp_string = SUBSTRING(selected_rows,i);
		flag = HEAD(temp_string,1);
		if (flag == "1"){
			W_SET_WINDOW_ARGS( wobj, W_LISTW_ROW, i);
			selected_row = W_GET_WINDOW_ARG( wobj, W_LISTW_ITEMID );	
			model_handle = A_GET(Report_Objects, selected_row);	
			PM_ADD_OBJECT_TO_SET(model_handle,Selected_Objects);
			k = k + 1;
		}
	}
	Selected_Objects_Number = k;
	return (0);
}

model_list_mode(item, event_type, selection)
{
	if (selection == 0){
		Model_Add_Mode = 0;
	}
	else{
		Model_Add_Mode = 1;
	}
	return(0);
}

/*
**get information of support stored in array 'Spool_List' and save in array 'ReportInfo'；
*/
get_report_info()
{
    /*风管安装托盘表*/
    /*define a temperary array for report information*/
	report = alloc_2darray(2000,Report_Column_Number);
	spools = A_ALLOC(2000);
    parts = alloc_2darray(2000,2);
    
	row_number = 0;
	for (i = 0; i < Spool_Number; i = i + 1;){
		spool = PM_GET_MEMBER_IN_SET(Spool_List, i);		
		/* get spool information and save to local array */
		get_spool_info(spool, report, row_number, spools, parts);
	}	
    
    /*save report information to global array*/
    Report_Row_Number = row_number;
    free_2darray(Report_Info);    
    Report_Info = alloc_2darray(Report_Row_Number,Report_Column_Number);
    A_FREE(Report_Objects);
    
    Report_Objects = A_ALLOC(Report_Row_Number);
    for(i=0;i<row_number;i=i+1;){
        for(j=0;j<Report_Column_Number;j=j+1;){
            value = get_2darray(report,i,j);
            put_2darray(Report_Info, i, j, value);	
        }
        spool = A_GET(spools,i);
        A_PUT(Report_Objects,i,spool);
    }
    A_FREE(spools);

	free_2darray(report);
	return(0);
}

get_report2_info()
{
    /*风管附件安装托盘表*/
    /*给报表信息分配一个临时数组*/
	report = alloc_2darray(Valve_Number,Report2_Column_Number);   
	for (i = 0; i < Valve_Number; i = i + 1;){
		valve = PM_GET_MEMBER_IN_SET(Valve_List,i);	
		/* 获取附件的相关信息并保存到临时数组 */
		get_valve_info(report, i, valve);
	}	
    
	/*将报表信息保存到全局变量*/
	free_2darray(Report2_Info); 
	Report2_Row_Number = Valve_Number;
	Report2_Info = alloc_2darray(Report2_Row_Number,Report2_Column_Number);
	Report2_Objects = A_ALLOC(Report2_Row_Number);
	for(i=0;i<Report2_Row_Number;i=i+1;){
		for(j=0;j<Report2_Column_Number;j=j+1;){
			value = get_2darray(report,i,j);
			put_2darray(Report2_Info, i, j, value);
		}
		valve = PM_GET_MEMBER_IN_SET(Valve_List,i);	
		A_PUT(Report2_Objects,i,valve);
	}
	free_2darray(report);
	return 0;
}

/*get valve information*/
get_valve_info(report, pos, valve)
{
    nth = 0;
    part_id = PM_GET_OBJDATA(valve,nth,MMT_TAG_PARTID);
    
    outfit_area = "Unset";
	res = PM_GET_OBJDATA(valve,nth,Outfit_Area);
	if(!ISINT(res)){
	   outfit_area = res;
	}

    planning_unit = "Unset";
	res = PM_GET_OBJDATA(valve,nth,Planning_Unit);
	if(!ISINT(res)){
	   planning_unit = res;
	}
    
    /*1.区域*/
    put_2darray(report,pos,0,outfit_area);

    /*2.托盘*/
    put_2darray(report,pos,1,planning_unit);
    
    /*3.阀件编号*/
    vpo = PM_GET_OBJDATA(valve,nth,"vpo");
    if(ISSTRING(vpo)){
        put_2darray(report,pos,2,vpo);
    }
    else{
        put_2darray(report,pos,2,"");
    }
    /*4.名称*/
    des = DM_PARTID_DATA(part_id,"DE");
    if(ISSTRING(des)){
        put_2darray(report,pos,3,des);
    }
    else{
        put_2darray(report,pos,3,"未定义");
    }
    /*5.规格&标准 */
    size_desc = "";
    detail = DM_PARTID_DATA(part_id,"DD");
    if(ISSTRING(detail)){
        size_desc = size_desc + detail;
    }
    std = DM_PARTID_DATA(part_id,"ST");
    if(ISSTRING(std)){
        size_desc = size_desc + " " +std;
    }
    put_2darray(report,pos,4,size_desc);
	
    /*6.数量*/
    put_2darray(report,pos,5,"1");
    /*7.单位*/
    put_2darray(report,pos,6,"pcs");
    /*8.重量*/
    mass = "0.0";
    res = PM_GET_OBJDATA(valve,nth,"MAS");
    if(ISSTRING(res)){
        valve_weight = String_To_Float(res);
        S_PRINTF(mass, "%.2f", valve_weight);
    }
    put_2darray(report,pos,7,mass);
}

/*get spool part information*/
get_spool_info(spool,report,row_number,spools,parts)
{
    spool_parts = PM_GET_OBJECTS_IN_GROUP(spool);
    part_number = PM_NR_MEMBERS_IN_SET(spool_parts);
    
    spool_info_size = 4;
    hspool_parts = alloc_2darray(part_number,spool_info_size);
    /*
    --0.  handle   part handle of part
    --1.  string   part id 
    --2.  string   part description
    --3.  string   part area
    */ 
    for(i=0;i<part_number;i=i+1;){
        part = PM_GET_MEMBER_IN_SET(spool_parts,i);
        part_id = PM_GET_OBJDATA(part,0,MMT_TAG_PARTID);
        part_type = PM_GET_OBJDATA(part,0,MMT_TAG_OBJTYPE);
        /* U_MESSAGE("part_type="+part_type); */
        
        if (part_type=="6") {
            /*风管展开面积 平方米*/
            part_area = PM_GET_OBJDATA(part,0,Part_Area);
            area = 0.000001 * String_To_Float(part_area);
            part_area = FTOASCII(area);
        }
        else if (part_type=="5") {
            /*角钢表面积 平方米*/
            partArea = Get_Part_Surface_Area(part);
            part_area = FTOASCII(partArea);
        }
        else{
            part_area = "0.0";
        }

        put_2darray(hspool_parts,i,0,part);
        put_2darray(hspool_parts,i,1,part_id);
        description = get_part_description(part);
        put_2darray(hspool_parts,i,2,description);  
        put_2darray(hspool_parts,i,3,part_area); 
    }  

    /*summary materail*/
    mto_no = 0;
    mto_info = alloc_2darray(part_number,spool_info_size);
    for(i=0;i<part_number;i=i+1;){
        part_id = get_2darray(hspool_parts,i,1);
        if(mto_no == 0){
            for(j=0;j<5;j=j+1;){
                value = get_2darray(hspool_parts,i,j);
                put_2darray(mto_info,mto_no,j,value);
            }
            mto_no = mto_no + 1;         
        }
        else{
            find = 0;
            for(k=0;k<mto_no;k=k+1){
                part_id0 = get_2darray(mto_info,k,1);
                if(part_id == part_id0 & !find){
                    find = 1;                             
                }
            }
            if(!find){
                for(j=0;j<spool_info_size;j=j+1;){
                    value = get_2darray(hspool_parts,i,j);
                    put_2darray(mto_info,mto_no,j,value);
                }
                mto_no = mto_no + 1;              
            }         
        }
    }
    free_2darray(hspool_parts);
   
    /*区域*/
    outfit_area = get_spool_outfit_area(spool);
    /*托盘*/
    planning_unit = "Unset";
    res = PM_GET_OBJDATA(spool,0,Planning_Unit);
    if(ISSTRING(res)){
        planning_unit = res;
    }
    /*管件号*/
    spool_name = Get_SpoolName(spool); 
    /*表面处理*/
    surf_treat = "清洁"; 
    /*重量*/
    spool_weight = "0.0";
    res = PM_GET_OBJDATA(spool,0,MMT_TAG_MASS);
    if(ISSTRING(res)){
        mass = String_To_Float(res);
        S_PRINTF(spool_weight,"%.2f",mass);
    }
    /*面积*/
    spool_area= ""; temp = 0.0;
    for(i=0;i<mto_no;i=i+1;){
        part_area = get_2darray(mto_info,i,3); 
        temp = temp + String_To_Float(part_area);
    } 
    S_PRINTF(spool_area,"%.3f",temp);

    for(i=0;i<mto_no;i=i+1;){
        A_PUT(spools,row_number,spool);      
        part_id = get_2darray(mto_info,i,1);
        part = get_2darray(mto_info,i,0);
        part_type = PM_GET_OBJDATA(part,0,MMT_TAG_OBJTYPE);
        if(part_type=="6"){
            put_2darray(parts,row_number,0,part_type);
            put_2darray(parts,row_number,1,part_id);      

            put_2darray(report,row_number,0,outfit_area);
            put_2darray(report,row_number,1,planning_unit);        
            put_2darray(report,row_number,2,spool_name);
            
            des = get_2darray(mto_info,i,2);     
            put_2darray(report,row_number,3,des);      
            put_2darray(report,row_number,4,surf_treat);   
            put_2darray(report,row_number,5,"1");
            put_2darray(report,row_number,6,"pcs");
            put_2darray(report,row_number,7,spool_area);
            put_2darray(report,row_number,8,spool_weight);                         
            row_number = row_number + 1;  
        }
    }  
    free_2darray(mto_info);
    return(0);
} 

get_spool_outfit_area(spool)
{
    area_name = "";	
	parts = PM_GET_OBJECTS_IN_GROUP(spool);
	part = PM_GET_MEMBER_IN_SET(parts,0);
	area = PM_GET_OBJDATA(part, 0, MMT_TAG_OBJECT_IN_OUTFIT_AREA);
	if(ISINT(area)){
	   area_name = "Unset";
	}
	else{
	   area_name = area;
	}   
	return(area_name);
}

get_part_length(part)
{
    obj_type = PM_GET_OBJDATA(part,0,MMT_TAG_OBJTYPE);
    if(obj_type == "5"){
        len = PM_GET_OBJDATA(part,0,MMT_TAG_LENGTH);
        if(ISSTRING(len)){
         length = "";
         S_PRINTF(length,"%.0f",String_To_Float(len));
        }
        else{
         length = "0.0";
        }
    }
    else{
        len = PM_GET_OBJDATA(part,0,MMT_TAG_HVAC_SURFACE_AREA);
        if(ISSTRING(len)){
            length = "";
            S_PRINTF(length,"%.0f",String_To_Float(len));
        }
        else{
            length = "0.0";
        }
    }
    return(length);
}

get_part_description(part)
{
    part_id = PM_GET_OBJDATA(part,0,MMT_TAG_PARTID);

    /*part descriptin*/ 
    part_des = "";
    description = DM_PARTID_DATA(part_id,"DE");
    if(ISSTRING(description)){
        part_des = description;
    }

    /*part size*/
    part_size = "";
    size = DM_PARTID_DATA(part_id,"DD");
    if(ISSTRING(size)){
        part_size = size;
    }
     
    /*part materail*/
    part_material = "";
    material = DM_PARTID_DATA(part_id,"MC");
    if(ISSTRING(material)){
        part_material = material;
    }
             
    description = part_des + " " + part_size + " " + part_material;
    return(description);
}

/*
**将全局变量object_prod_info中保存的生产信息显示到列表中；
**根据全局变量Grid_SortColumn，Grid_SortDirection保存的信息对显示列表进行排序；
*/
publish_model_info()
{
	/* 将报表信息显示到窗口中 */	
	W_SET_WINDOW_ARGS(DisplayGrid, W_LISTW_ROW, 0);
	W_SET_WINDOW_ARGS(DisplayGrid, W_LISTW_DELETEROWS, -1); 
    if(Report_Type == 0){  
        for (i = 0; i < Report_Row_Number; i = i + 1;){
            W_SET_WINDOW_ARGS(DisplayGrid, W_LISTW_ROW, 0);
            W_SET_WINDOW_ARGS(DisplayGrid, W_LISTW_INSERTROWS, 1);
            for ( j = 0; j < Report_Column_Number; j = j + 1;){
                Value = get_2darray(Report_Info,i,j);
                if (ISSTRING(Value)){
                    W_SET_WINDOW_ARGS(DisplayGrid, W_LISTW_ROW, 0, W_LISTW_COLUMN, j, W_LISTW_STRING, Value);
                }
            }		
            W_SET_WINDOW_ARGS(DisplayGrid, W_LISTW_ITEMID, i);		
        }
    }
    else if(Report_Type == 1){
        for (i = 0; i < Report2_Row_Number; i = i + 1;){
            W_SET_WINDOW_ARGS(DisplayGrid, W_LISTW_ROW, 0);
            W_SET_WINDOW_ARGS(DisplayGrid, W_LISTW_INSERTROWS, 1);
            for ( j = 0; j < Report2_Column_Number; j = j + 1;){
                Value = get_2darray(Report2_Info,i,j);
                if (ISSTRING(Value)){
                    W_SET_WINDOW_ARGS(DisplayGrid, W_LISTW_ROW, 0, W_LISTW_COLUMN, j, W_LISTW_STRING, Value);
                }
            }		
            W_SET_WINDOW_ARGS(DisplayGrid, W_LISTW_ITEMID, i);		
        }
    }

	W_SET_WINDOW_ARGS(DisplayGrid, W_LISTW_ROW, 1);
	
	/* 自动调整列宽度 Adjust the width of column automatically*/
	for (i=0; i < Grid_Column_Number; i = i + 1;){
		W_SET_WINDOW_ARGS(DisplayGrid, W_LISTW_COLUMN, i, W_LISTW_COLUMNWIDTH, -1);
	}
	
	/* 对生产信息列表进行排序 */
	W_SET_WINDOW_ARGS(DisplayGrid, W_LISTW_COLUMN, Grid_SortColumn, W_LISTW_SORT, Grid_SortDirection);
}
/*
**创建顶层窗体
**Create Top frame
*/
create_top_frame()
{
	mainform = W_INIT_FRAME();
	W_REALIZE_WINDOW(mainform,  W_FRAME_TITLE, "风管安装托盘表" );	
	return(mainform);
}

/*
**创建显示报表内容的格栅
*/
create_grid(main_form)
{
	wobj = W_ADD_WINDOW(main_form, W_MULTISELECT, "DisplayGrid");				   
	W_REALIZE_WINDOW(wobj,  W_FRAME_RIGHT_OF,    "Block_Name",
                            W_FRAME_BELOW,       "panel_upperpart",
                            W_LISTW_COLUMNS,     Report_Column_Number,
                            W_FRAME_SCROLLBAR,   W_SCROLLBAR_RIGHTEDGE,
                            W_LISTW_HEADER_MODE, W_LISTW_HEADER_BUTTONS,
                            W_LISTW_MODE_REPORT, 0,
                            W_FRAME_COLS,        73, 
                            W_FRAME_ROWS,        17,
                            W_LISTW_CALLBACK,    1);						   
	W_SET_WINDOW_HANDLER(wobj, "grid_handler");
	
	/*
	**设置格栅的列标题
	*/	
	set_column_title(wobj, Grid_Title, Report_Column_Number);				
	return(wobj);
}

quit_handler(item, event_type, button_value)
{
	exit();
	U_MESSAGE("退出风管托盘表窗口");
	return(99);
}

grid_handler(window, event_type, row, column, item_id)
{  	
	if (event_type == W_EVENT_ITEM_SELECTED) {
		/* 处理格栅的排序 */
		if (row < 0 & column >= 0) {
			sort_grid(column,window);
		}		
		else if(row >= 0 & column == 0){		
			/* 获取选中的模型 */				
			get_selected_items();			
			auto_highlight();
			auto_scale_model();			
		}		
	}	
	/* 处理双击数据行的事件 */
	else if (event_type == W_EVENT_ITEM_DOUBLECLICKED) {	
		/* 获取选中的模型 */			
		get_selected_items();			
		auto_highlight();
		auto_scale_model();			
	}
	return(0);
}

auto_highlight()
{
	/* 处理模型加亮 */
	if (AutoHighLight == 1){
		/* 将已经加亮的模型恢复原来的颜色 */
		model_number = PM_NR_MEMBERS_IN_SET(High_Light_List);
		for (i = 0 ; i < model_number; i = i + 1){
			model = PM_GET_MEMBER_IN_SET(High_Light_List,i);
			members = PM_GET_OBJECTS_IN_GROUP(model);
            member_number = PM_NR_MEMBERS_IN_SET(members);
            for(i=0;i<member_number;i=i+1;){
                model_group = PM_GET_MEMBER_IN_SET(members,i);
                Highlight_Object(model_group,FALSE);
			}
		}
		temp = PM_INIT_SET();
		High_Light_List = PM_COPY_SET(temp);
		PM_FREE_SET(temp);
		
		/* 加亮选中的模型 */
		model_number = PM_NR_MEMBERS_IN_SET(Selected_Objects);
		for (i = 0; i < model_number; i = i + 1){
			model = PM_GET_MEMBER_IN_SET(Selected_Objects,i);
			members = PM_GET_OBJECTS_IN_GROUP(model);
            member_number = PM_NR_MEMBERS_IN_SET(members);
            for(i=0;i<member_number;i=i+1;){
                model_group = PM_GET_MEMBER_IN_SET(members,i);
                Highlight_Object(model_group,TRUE);
			}
			PM_ADD_OBJECT_TO_SET(model,High_Light_List);			
		}
	}
}

auto_scale_model()
{
	/* 处理模型自动缩放 */
	if (AutoScale == 1){				
		model_number = PM_NR_MEMBERS_IN_SET(Selected_Objects);
		if (model_number == 1){
			model_handle = PM_GET_MEMBER_IN_SET(Selected_Objects,0);
			Auto_Scale(model_handle);
		}
	}
}

sort_grid(column,window)
{
	/* A column header was clicked; sort the items */
	if (Grid_SortColumn == column) {
		if (Grid_SortDirection == 0) {
			Grid_SortDirection = 1;
		}
		else {
			Grid_SortDirection = 0;
		}
	}
	else {
		Grid_SortDirection = 1;
	}
	Grid_SortColumn = column;
	if(Grid_SortColumn == 3){
	   W_SET_WINDOW_ARGS(window, W_LISTW_COLUMN, column, W_LISTW_SORT, Grid_SortDirection);
	}
}

model_browsing_handler(item, event_type, button_value)
{
	W_UNMAP_FRAME(MainWindow);	
	selected_model_number = PM_NR_MEMBERS_IN_SET(High_Light_List);
	if (selected_model_number > 0){
		current_model = PM_GET_MEMBER_IN_SET(High_Light_List, 0);
		parts = PM_GET_OBJECTS_IN_GROUP(current_model);
		part = PM_GET_MEMBER_IN_SET( parts, 0);
		x0 = PM_GET_OBJDATA(part, 0, MMT_TAG_COGX);
		y0 = PM_GET_OBJDATA(part, 0, MMT_TAG_COGY);
		z0 = PM_GET_OBJDATA(part, 0, MMT_TAG_COGZ);
		x = SCAN_QUANT(1,x0);
		y = SCAN_QUANT(1,y0);
		z = SCAN_QUANT(1,z0);
		PM_SET_CURRENT_LOC(x, y, z);	
	}
	nth_part = 0;
	PM_PICK_OBJECT("浏览模型",nth_part);
	W_MAP_FRAME(MainWindow);
}

search_model(item, event_type, button_value)
{   
    query = PM_INIT_QUERY("GROUP");
	groups = PM_EXECUTE_QUERY(query);
		
	/* Get the hvac spool group */
	temp_list = PM_INIT_SET();
	if (!ISINT(groups)){
		group_number = PM_NR_MEMBERS_IN_SET(groups);
		for (i = 0; i < group_number; i = i + 1;){
			group_handle = PM_GET_MEMBER_IN_SET(groups, i);
			group_type = PM_GET_OBJDATA(group_handle, 0, MMT_TAG_GROUPTYPE);
			/* Get rid of other type group*/
 			if (group_type == Group_Type){
				/* 过滤不包含零件的组Get rid of group that content nothing */	
				parts = PM_GET_OBJECTS_IN_GROUP(group_handle);
				if (parts != 0){
					part_number = PM_NR_MEMBERS_IN_SET(parts);
					if (part_number !=0){
					    /* 将handle保存到全局数组 */
						result = PM_ADD_OBJECT_TO_SET(group_handle,temp_list);
					}
				}
			}			
		}
	}
	
	model_number = PM_NR_MEMBERS_IN_SET(temp_list);
	if (model_number <= 0){
		return 0;
	}
    /*根据条件筛选模型*/
	filter_model(temp_list);
	
	/* put the result to the array 'Spool_List' */
    PM_FREE_SET(Spool_List);
    Spool_List = PM_INIT_SET();		
	Spool_List = PM_COPY_SET(temp_list); 	
	Spool_Number = PM_NR_MEMBERS_IN_SET(Spool_List);
	if (Spool_Number <= 0){
		PM_FREE_SET(temp_list);
		return 0;
	}
	PM_FREE_SET(temp_list);
    
    /* 获取管附件 Get pipe standard part object */    
	temp_list = PM_INIT_SET();	
	if (!ISINT(groups)){
		group_number = PM_NR_MEMBERS_IN_SET(groups);
        /* 遍历所有的模型组 */
		for (i = 0; i < group_number; i = i + 1;){
			group_handle = PM_GET_MEMBER_IN_SET(groups, i);
			group_type = PM_GET_OBJDATA(group_handle, 0, MMT_TAG_GROUPTYPE);
			/* 过滤其它类型的组 Get rid of other type group*/
 			if (group_type == MMT_GRPT_HVACLINE){
                pipes = PM_GET_OBJECTS_IN_GROUP(group_handle);
                pipe_number = PM_NR_MEMBERS_IN_SET(pipes);
                /* 遍历管线下面所有的PIPE */
                if(pipe_number > 0){
                    for(j=0;j<pipe_number;j=j+1;){
                        pipe = PM_GET_MEMBER_IN_SET(pipes,j);
                        part_number = PM_NR_PARTS_IN_PIPE(pipe);
                        if(part_number<0){
                            nth = 0;
                            spool_number = PM_GET_OBJDATA(pipe,nth,"spn");
                            category_type = PM_GET_OBJDATA(pipe,nth,".ml");
                            /* U_MESSAGE(category_type); */
                            if(ISINT(spool_number)){                              /* 排除带管段号的标准件*/
                                if(category_type=="3"){                           /* 部件 3,*/
                                    PM_ADD_OBJECT_TO_SET(pipe,temp_list);                                                     
                                }                                                   
                            } 
                        }
                    }               
                }
			}			
		}
	}

    /* 根据条件过滤掉不属于指定托盘的阀件 */
    valve_number = PM_NR_MEMBERS_IN_SET(temp_list);
    if(valve_number > 0){
        filter_valve(temp_list);  
    }
      
    /* 将找到的阀件拷贝到全局变量 */
    valve_number = PM_NR_MEMBERS_IN_SET(temp_list);    
    if(valve_number > 0){
        PM_FREE_SET(Valve_List);
        Valve_List = PM_INIT_SET();		
        Valve_List = PM_COPY_SET(temp_list);	
        PM_FREE_SET(temp_list);    
        Valve_Number = valve_number;  
        get_report2_info();
    } 
    
	/* get model information and publish to grid */
	get_report_info();

    /* 显示报表信息 */
	publish_model_info();
}

filter_valve(valves)
{
	/* 获取过滤条件 Get filter conditions*/
	block_name = W_GET_PANELITEM_ARG(Block_Name, W_PANEL_VALUE);
	planning_unit = W_GET_PANELITEM_ARG(PlanningUnit, W_PANEL_VALUE);
	outfit_area = W_GET_PANELITEM_ARG(OutfitArea, W_PANEL_VALUE);
	temp = PM_INIT_SET();
	
	/* 过滤掉不符合条件的模型 */

	valve_number = PM_NR_MEMBERS_IN_SET(valves);

	for (i = 0; i < valve_number; i = i + 1;){
        model_block_name = "Unset";
        model_planning_unit = "Unset";
        model_outfit_area = "Unset";
        
		valve = PM_GET_MEMBER_IN_SET(valves, i);			
		res = PM_GET_OBJDATA(valve,0, MMT_TAG_OBJECT_IN_BLOCK);
		if(ISSTRING(res)){
            model_block_name = res;
		}	

        model_planning_unit = get_valve_planing_unit(valve);
        model_outfit_area = get_valve_outfit_area(valve);

        check_area = PATTERN_MATCH(model_outfit_area,outfit_area);         
        check_block = PATTERN_MATCH(model_block_name,block_name);
		check_planning_unit = PATTERN_MATCH(model_planning_unit,planning_unit);
		if(check_block & check_planning_unit & check_area){		
		   PM_ADD_OBJECT_TO_SET(valve,temp);
        }							
	}
	PM_SETOP_SUB(valves,valves);
	PM_SETOP_OR(valves,temp);
	PM_FREE_SET(temp);
	return(0);
}

/*阀件的区域*/
get_valve_outfit_area(valve)
{
    find = 0;
    max = 10;
    node_id = 1;
    connected_node_id = 0;
    nth = 0;
    while(!find){
        obj = PM_GET_CONNECTED_OBJECT(valve,node_id,connected_node_id);
        if(!ISINT(obj)){
            outfit_area = PM_GET_OBJDATA(obj,nth,Outfit_Area);
            if(ISSTRING(outfit_area)){
                return(outfit_area);
            }
            else{
                node_id = node_id + 1;           
            }            
        }
        else{
            node_id = node_id + 1;        
        }
        if(node_id > max){
            find = 1;
        }
    }
    return("Unset");
}

/*阀件的托盘*/
get_valve_planing_unit(valve)
{
    find = 0;
    max = 10;
    node_id = 1;
    connected_node_id = 0;
    nth = 0;
    while(!find){
        obj = PM_GET_CONNECTED_OBJECT(valve,node_id,connected_node_id);
        if(!ISINT(obj)){
            planning_unit = PM_GET_OBJDATA(obj,nth,Planning_Unit);
            if(ISSTRING(planning_unit)){
                return(planning_unit);
            }
            else{
                node_id = node_id + 1;           
            }            
        }
        else{
            node_id = node_id + 1;        
        }
        if(node_id > max){
            find = 1;
        }
    }
    return("Unset");
}

filter_model(models)
{
	/* 获取过滤条件 Get filter conditions*/
	block_name = W_GET_PANELITEM_ARG(Block_Name, W_PANEL_VALUE);
	planning_unit = W_GET_PANELITEM_ARG(PlanningUnit, W_PANEL_VALUE);
	outfit_area = W_GET_PANELITEM_ARG(OutfitArea, W_PANEL_VALUE);
	temp = PM_INIT_SET();
	
	/* 过滤掉不符合条件的模型 */
	spool_number = PM_NR_MEMBERS_IN_SET(models);	
	for (i = 0; i < spool_number; i = i + 1;){
        model_block_name = "Unset";
        model_planning_unit = "Unset";
        model_outfit_area = "Unset";
        
		spool_handle = PM_GET_MEMBER_IN_SET(models, i);	
        value = PM_GET_OBJDATA(spool_handle,0,MMT_TAG_OBJECT_IN_BLOCK);
        if(ISSTRING(value)){
            model_block_name = value;
        }
      
        value = PM_GET_OBJDATA(spool_handle,0,Planning_Unit);
        if(ISSTRING(value)){
            model_planning_unit = value;
        }	
      
        model_outfit_area = get_spool_outfit_area(spool_handle);   
        
        check_area = PATTERN_MATCH(model_outfit_area,outfit_area);         
        check_block = PATTERN_MATCH(model_block_name,block_name);
		check_planning_unit = PATTERN_MATCH(model_planning_unit,planning_unit);
		if(check_block & check_planning_unit & check_area){		
		   PM_ADD_OBJECT_TO_SET(spool_handle,temp);
        }				
	}
	PM_SETOP_SUB(models,models);
	PM_SETOP_OR(models,temp);
	PM_FREE_SET(temp);
	return(0);
}

options_selected(item, event_type, dummy)
{
	s = W_GET_PANELITEM_ARG(item, W_PANEL_VALUE);
	if ( s == "00" ){
		AutoHighLight = 0;
		AutoScale = 0;	
		/* 将已经加亮的模型恢复原来的颜色 */
		model_number = PM_NR_MEMBERS_IN_SET(High_Light_List);
		for (i = 0 ; i < model_number; i = i + 1){
			model = PM_GET_MEMBER_IN_SET(High_Light_List,i);
			Highlight_Object(model,FALSE);
		}
		temp = PM_INIT_SET();
		High_Light_List = PM_COPY_SET(temp);	
		PM_FREE_SET(temp);		
	}
	else if( s == "10"){
		AutoHighLight = 1;
		AutoScale = 0;	
	}
	else if( s == "11"){
		AutoHighLight = 1;
		AutoScale = 1;	
	}
	else if( s == "01"){
		AutoHighLight = 0;
		AutoScale = 1;
		/* 将已经加亮的模型恢复原来的颜色 */
		model_number = PM_NR_MEMBERS_IN_SET(High_Light_List);
		for (i = 0 ; i < model_number; i = i + 1){
			model = PM_GET_MEMBER_IN_SET(High_Light_List,i);
			Highlight_Object(model,FALSE);
		}
		temp = PM_INIT_SET();
		High_Light_List = PM_COPY_SET(temp);
		PM_FREE_SET(temp);
	}		
	return(0);
}

create_panel_upperpart(mainform)
{
	panel_upperpart = W_ADD_WINDOW(mainform, W_PANEL, "panel_upperpart");
	W_REALIZE_WINDOW(panel_upperpart,   W_FRAME_X, 0,
							                  W_FRAME_Y, 0,
							                  W_FRAME_ROWS, 2,
							                  W_FRAME_COLS, 70);

	OutfitArea = W_ADD_PANELITEM(panel_upperpart, W_PANEL_FILL, "OutfitArea");
	W_REALIZE_PANELITEM(OutfitArea,  W_PANEL_ROW, 0, 
	                                 W_PANEL_COL, 0,
							               W_PANEL_LABEL, "区域:    ",
							               W_PANEL_LENGTH, 10,
							               W_PANEL_VALUE, "*",
							               W_PANEL_CALLBACK, 1);
							                  					
	Block_Name = W_ADD_PANELITEM(panel_upperpart, W_PANEL_FILL, "Block_Name");
	W_REALIZE_PANELITEM(Block_Name,  W_PANEL_ROW, 0, 
	                                 W_PANEL_COL, 20,
							               W_PANEL_LABEL, "分段:     ",
							               W_PANEL_LENGTH, 10,
							               W_PANEL_VALUE, "*",
							               W_PANEL_SENSITIVITY,0,
							               W_PANEL_CALLBACK, 1);
							              
	PlanningUnit = W_ADD_PANELITEM(panel_upperpart, W_PANEL_FILL, "PlanningUnit");
	W_REALIZE_PANELITEM(PlanningUnit,  W_PANEL_ROW,       0, 
	                                    W_PANEL_COL,      40,
							                  W_PANEL_LABEL,    "托盘:     ",
							                  W_PANEL_LENGTH,   10,
							                  W_PANEL_VALUE,    "*",
							                  W_PANEL_CALLBACK, 1);
							                  
							                  							                							 							 
	Search_Model = W_ADD_PANELITEM(panel_upperpart, W_PANEL_BUTTON, "Search_Model");
	W_REALIZE_PANELITEM(Search_Model, W_PANEL_ROW, 	      0, 
	                                 W_PANEL_COL,         60,
							               W_PANEL_BUTTONIMAGE, "查找", 
							               W_PANEL_WIDTH,       8,
							               W_PANEL_BUTTONVALUE, 210,
							               W_PANEL_CALLBACK,    1,
							               W_PANEL_LAYOUT,      W_LAYOUT_HORIZONTAL);	

	report_type = W_ADD_PANELITEM(panel_upperpart, W_PANEL_CHOICE, "report_type");
	W_REALIZE_PANELITEM(report_type,	W_PANEL_ROW,            1, 
										W_PANEL_COL,            0,
										W_PANEL_LABEL,          "报表:  ",
										W_PANEL_CHOICESTRING,   "风管安装托盘表    ",
										W_PANEL_CHOICESTRING,   "附件安装托盘表    ",
										W_PANEL_ORDINALVALUE,   0,
										W_PANEL_CHOICESTYLE,    W_STYLE_PUSHBUTTONS,
										W_PANEL_CALLBACK,       1);
                                        
	Options = W_ADD_PANELITEM(panel_upperpart, W_PANEL_TOGGLE, "options");
	W_REALIZE_PANELITEM(Options, W_PANEL_ROW, 1, W_PANEL_COL, 50,
							 W_PANEL_LABEL, "",
							 W_PANEL_CHOICESTRING, "自动加亮    ",
							 W_PANEL_CHOICESTRING, "自动缩放    ",
							 W_PANEL_VALUE, "00",
							 W_PANEL_CHOICESTYLE,	W_STYLE_PUSHBUTTONS,
							 W_PANEL_CALLBACK, 1);			
					 							 
	W_SET_PANELITEM_HANDLER(Search_Model, "search_model");
	W_SET_PANELITEM_HANDLER(Options, "options_selected");
	W_SET_PANELITEM_HANDLER(report_type, "report_type_handler");
	return(panel_upperpart);
}

report_type_handler(item, event_type, selection)
{
	W_SET_WINDOW_ARGS(DisplayGrid, W_LISTW_ROW, 0);
	W_SET_WINDOW_ARGS(DisplayGrid, W_LISTW_DELETEROWS, -1); 
	if(selection == 0){
		Report_Type = 0;
		Grid_Column_Number = Report_Column_Number;
		W_SET_WINDOW_ARGS(wobj,	W_LISTW_COLUMNS, Grid_Column_Number);
		Set_Column_Title(wobj, Grid_Title, Grid_Column_Number);
		if(Report_Row_Number != 0){
			publish_model_info();
		}
	}
	else if(selection == 1){
		Report_Type = 1;
		Grid_Column_Number = Report2_Column_Number;
		W_SET_WINDOW_ARGS(wobj,	W_LISTW_COLUMNS, Grid_Column_Number);
		Set_Column_Title(wobj, Grid_Title2, Grid_Column_Number);

		if(Report2_Row_Number != 0){
			publish_model_info();
		}
	}
	return(0);
}

create_panel_underpart(mainform)
{	
	panel_underpart = W_ADD_WINDOW(mainform, W_PANEL, "panel_underpart");
	W_REALIZE_WINDOW(panel_underpart,   W_FRAME_X, 0,
                                        W_FRAME_Y, 0);

	Report_Template = W_ADD_PANELITEM(panel_underpart, W_PANEL_FILL, "Report_Template");
	W_REALIZE_PANELITEM(Report_Template,    W_PANEL_ROW, 20, 
                                            W_PANEL_COL, 0,
                                            W_PANEL_LABEL, "报表模板:     ",
                                            W_PANEL_LENGTH, 49,
                                            W_PANEL_VALUE, "*",
                                            W_PANEL_SENSITIVITY, 0,
                                            W_PANEL_CALLBACK, 1);

	select_template = W_ADD_PANELITEM(panel_underpart, W_PANEL_BUTTON, "select_template");
	W_REALIZE_PANELITEM(select_template,    W_PANEL_ROW, 	     20, 
                                            W_PANEL_COL,         61,
                                            W_PANEL_BUTTONIMAGE, "选择模板", 
                                            W_PANEL_WIDTH,       10,
                                            W_PANEL_BUTTONVALUE, 202,
                                            W_PANEL_CALLBACK,    1,
                                            W_PANEL_LAYOUT,      W_LAYOUT_HORIZONTAL);							                     

	Report_Path = W_ADD_PANELITEM(panel_underpart, W_PANEL_FILL, "Report_Path");
	W_REALIZE_PANELITEM(Report_Path,    W_PANEL_ROW, 21, 
                                        W_PANEL_COL, 0,
                                        W_PANEL_LABEL, "保存路径:     ",
                                        W_PANEL_LENGTH, 49,
                                        W_PANEL_VALUE, "*",
                                        W_PANEL_SENSITIVITY, 0,
                                        W_PANEL_CALLBACK, 1);	
							                     
	select_path = W_ADD_PANELITEM(panel_underpart, W_PANEL_BUTTON, "select_path");
	W_REALIZE_PANELITEM(select_path,W_PANEL_ROW, 	      21, 
	                                W_PANEL_COL,         61,
                                    W_PANEL_BUTTONIMAGE, "选择路径", 
                                    W_PANEL_WIDTH,       10,
                                    W_PANEL_BUTTONVALUE, 202,
                                    W_PANEL_CALLBACK,    1,
                                    W_PANEL_LAYOUT,      W_LAYOUT_HORIZONTAL);						                     
							                  
	export_report = W_ADD_PANELITEM(panel_underpart, W_PANEL_BUTTON, "export_report");
	W_REALIZE_PANELITEM(export_report,  W_PANEL_ROW, 	     22, 
	                                    W_PANEL_COL,         0,
                                        W_PANEL_BUTTONIMAGE, "导出报表", 
                                        W_PANEL_WIDTH,       10,
                                        W_PANEL_BUTTONVALUE, 202,
                                        W_PANEL_CALLBACK,    1,
                                        W_PANEL_LAYOUT,      W_LAYOUT_HORIZONTAL);							    
														 							 
	model_browsing = W_ADD_PANELITEM(panel_underpart, W_PANEL_BUTTON, "model_browsing");
	W_REALIZE_PANELITEM(model_browsing, W_PANEL_ROW, 	     22, 
	                                    W_PANEL_COL,         49,
                                        W_PANEL_BUTTONIMAGE, "模型浏览", 
                                        W_PANEL_WIDTH,       10,
                                        W_PANEL_BUTTONVALUE, 202,
                                        W_PANEL_CALLBACK,    1,
                                        W_PANEL_LAYOUT,      W_LAYOUT_HORIZONTAL);
							 			
	quit = W_ADD_PANELITEM(panel_underpart, W_PANEL_BUTTON, "quit");
	W_REALIZE_PANELITEM(quit,    W_PANEL_ROW, 	     22, 
                                W_PANEL_COL,         61,
                                W_PANEL_BUTTONIMAGE, "退出", 
                                W_PANEL_WIDTH,       10,
                                W_PANEL_BUTTONVALUE, 207,
                                W_PANEL_CALLBACK,    1,
                                W_PANEL_LAYOUT,      W_LAYOUT_HORIZONTAL);	
							 
	W_SET_PANELITEM_HANDLER(quit, "quit_handler");
	W_SET_PANELITEM_HANDLER(model_browsing, "model_browsing_handler");
	W_SET_PANELITEM_HANDLER(export_report, "export_to_excel");
	W_SET_PANELITEM_HANDLER(select_path, "select_path_handler");
	W_SET_PANELITEM_HANDLER(select_template, "select_template_handler");
	return(panel_underpart);
}

select_path_handler(item, event_type, dummy)
{
   path = U_GET_DIRECTORY("选择报表保存路径","C:/TEMP/","",0);
   if(ISSTRING(path)){
      W_SET_PANELITEM_ARGS(Report_Path,W_PANEL_VALUE,path+"/");
   }
}

select_template_handler(item, event_type, dummy)
{
   flag = 0;
   template = U_GET_FILENAME("请选择模板文件", "P:\\报表模板\\","风管安装托盘表.xlsx", "Excel File(*.xlsx)\nExcel File(*.xlsx)\nAll Files(*.*)",2 ,flag);
   if(ISSTRING(template)){
      W_SET_PANELITEM_ARGS(Report_Template,W_PANEL_VALUE,template);
   }
}

export_to_excel(item, event_type, dummy)
{
   random_string = get_random_string();
   DataFileName = "C:\\TEMP\\hvacreport"+random_string+".txt";
   
	if ( F_EXIST(DataFileName) ){
		check = F_DELETE_FILE(DataFileName);
		if (check == -1){
			U_MESSAGEBOX("请先关闭文件" + DataFileName, U_MB_ERROR, U_MB_OK, U_MB_OK);
			return(-1);
		}
	}
	
	flag = F_CREATE_FILE(DataFileName);
	if (flag == -1){
		U_CONFIRM("用户对文件:" + DataFileName + "所在路径没有写权限" );
		return(-1);
	}

	file = F_OPEN_FILE(DataFileName,"w");
	
    /* 获取模板文件 */
    unix_tmp_path = W_GET_PANELITEM_ARG(Report_Template,W_PANEL_VALUE);
	if(!F_EXIST(unix_tmp_path)){
		msg = "模板文件 <" + unix_tmp_path + "> 不存在";
		U_CONFIRM(msg);
		return(-1);
	}	
    /* 模板文件后缀名 */
    unix_tmp_suffix = SEARCH(unix_tmp_path, ".");

	/* 获取.NET程序路径 */
	unix_exe_path = SYS_GETENV("MarineToolkit") + "\\NET_Programs\\SDARI_Hvac_Report.exe";

	/*获取报表文件(excel)名称*/
	U_INIT_DIALOG("请输入报表文件名称");
	name_f = U_SET_STR("Excel文件名:", "", 20);
	if(U_DIALOG() < 0){
		return(0);
	}
	doc_name = U_GET_STR(name_f);
	if(doc_name == ""){
		msg = "文件名不能为空";
		U_MESSAGEBOX(msg, U_MB_WARNING, U_MB_OK, U_OK);
		return(0);
	}
	
	/*获取报表文件的保存路径*/
	unix_rep_path = W_GET_PANELITEM_ARG(Report_Path,W_PANEL_VALUE);
	if(!F_EXIST(unix_rep_path)){
		msg = "路径 <" + unix_rep_path + "> 不存在";
		U_MESSAGEBOX(msg, U_MB_ERROR, U_MB_OK, U_OK);
		return(-1);
	}	
    
	unix_rep_file = unix_rep_path + doc_name + unix_tmp_suffix;
	
	win_tmp_path = S_REPLACE(unix_tmp_path, "/", "\\");
	win_exe_path = S_REPLACE(unix_exe_path, "/", "\\");
	win_rep_file = S_REPLACE(unix_rep_file, "/", "\\");
	
	write_to_temp_file(file);
	F_CLOSE_FILE(file);

	cmd = win_exe_path + " " + win_tmp_path + " " + DataFileName + " " + win_rep_file;
    /* U_MESSAGE("cmd is "+cmd); */
	SYS_EXEC_CMND(cmd);		
	return(0);
}

write_to_temp_file(file)
{   
	/*项目信息*/
    res = Get_Project_Attribute(Tag_Project_Number);
    if (!ISSTRING(res)){
        project_number = "";
    }else{
        project_number = res;
    }
    res = Get_Project_Attribute(Tag_Project_Description);
    if (!ISSTRING(res)){
        project_descr = "";
    }else{
        project_descr = res;
    }
    
    planning_unit = W_GET_PANELITEM_ARG(PlanningUnit, W_PANEL_VALUE);
    design_area = W_GET_PANELITEM_ARG(OutfitArea, W_PANEL_VALUE);
	U_INIT_DIALOG("请输入托盘信息");
    s_f1 = U_SET_STR("区  域:", design_area, 18);
    s_f2 = U_SET_STR("托盘号:", planning_unit, 18);
    s_f3 = U_SET_STR("图  号:", "", 18);
    if(U_DIALOG()<0){
        U_MESSAGE("用户取消操作");
        return(0);
    }
    design_area= U_GET_STR(s_f1);
    planning_unit = U_GET_STR(s_f2);
    drawing_number= U_GET_STR(s_f3);
    
	info = "风管安装托盘表" + ",#" + project_number + ",#" + project_descr + ",#" + design_area + ",#" + planning_unit + ",#" + drawing_number + ",#";
   	F_WRITE_STR(file,info);
   	F_WRITE_NEWLINE(file);	
    
	/* #5 - 从Excel表的第四行开始填数据
    ** #1 - 从Excel表的第一行开始填数据
    ** #9 - 总共9列数据
    */
	info = "Table,#风管安装托盘表" + ",#5,#1,#9";
   	F_WRITE_STR(file,info);
   	F_WRITE_NEWLINE(file);	 
	for(i=0;i<Report_Row_Number;i=i+1;){
		info = "Line,#";
		for(k=1;k<Report_Column_Number;k=k+1;){
			value = get_2darray(Report_Info,i,k);
			info = info + value + ",#";	
		}
		F_WRITE_STR(file,info);
		F_WRITE_NEWLINE(file);	
	}
	
	info = "Table,#风管附件安装托盘表" + ",#5,#1,#9";
   	F_WRITE_STR(file,info);
   	F_WRITE_NEWLINE(file);
	for(i=0;i<Report2_Row_Number;i=i+1;){
		info = "Line,#";
		for(k=1;k<Report2_Column_Number;k=k+1;){
			value = get_2darray(Report2_Info,i,k);
            if(k == 4){
                /*报表模板中指定的列有合并单元格*/
                info = info + value + ",# ,#";
            }
            else{
                info = info + value + ",#";	
            }
		}
		F_WRITE_STR(file,info);
		F_WRITE_NEWLINE(file);	
	}
	return(0);   
}

write_to_temp_file_single(file)
{ 
	/*项目信息*/
    res = Get_Project_Attribute(Tag_Project_Number);
    if (!ISSTRING(res)){
        project_number = "";
    }else{
        project_number = res;
    }
    res = Get_Project_Attribute(Tag_Project_Description);
    if (!ISSTRING(res)){
        project_descr = "";
    }else{
        project_descr = res;
    }
    
    planning_unit = W_GET_PANELITEM_ARG(PlanningUnit, W_PANEL_VALUE);
    design_area = W_GET_PANELITEM_ARG(OutfitArea, W_PANEL_VALUE);
	U_INIT_DIALOG("请输入托盘信息");
    s_f1 = U_SET_STR("区  域:", design_area, 18);
    s_f2 = U_SET_STR("托盘号:", planning_unit, 18);
    s_f3 = U_SET_STR("图  号:", "", 18);
    if(U_DIALOG()<0){
        U_MESSAGE("用户取消操作");
        return(0);
    }
    design_area= U_GET_STR(s_f1);
    planning_unit = U_GET_STR(s_f2);
    drawing_number= U_GET_STR(s_f3);
    
	info = "风管安装托盘表" + ",#" + project_number + ",#" + project_descr + ",#" + design_area + ",#" + planning_unit + ",#" + drawing_number + ",#";
   	F_WRITE_STR(file,info);
   	F_WRITE_NEWLINE(file);	

    /*托盘表信息*/
    info = "Table,#风管安装托盘表" + ",#5,#1,#9";
    F_WRITE_STR(file,info);
    F_WRITE_NEWLINE(file);	
    
    mto_number = 1;
    prev = "";
    for(i=0;i<Report_Row_Number;i=i+1;){   
        info = "Line,#";
        W_SET_WINDOW_ARGS(DisplayGrid,W_LISTW_ROW,i);
        item_id = W_GET_WINDOW_ARG(DisplayGrid,W_LISTW_ITEMID);
        for(k=2;k<Report_Column_Number;k=k+1;){
            value = get_2darray(Report_Info,item_id,k);
            if(k == 2){         
                if(i==0){
                    info = info + ITOASCII(mto_number) + ",#";
                    prev = value;
                    info = info + value + ",#";
                }
                else{
                    if(prev == value){
                        info = info + " ,#";
                        info = info + " ,#";
                    }
                    else{
                        mto_number = mto_number + 1;
                        info = info + ITOASCII(mto_number) + ",#";
                        prev = value;
                        info = info + value + ",#";
                    }
                }
            }
            else{
                if(k == 100){
                    /*报表模板中指定的列有合并单元格*/
                    info = info + value + ",# ,#";
                }
                else{
                    info = info + value + ",#";	
                }
            }
        }
        F_WRITE_STR(file,info);
        F_WRITE_NEWLINE(file);	
    }
    
    F_WRITE_NEWLINE(file);
    F_WRITE_NEWLINE(file);
    F_WRITE_NEWLINE(file);
    for(i=0;i<Total_Number;i=i+1;){   
        info = " ,#";
        for(k=0;k<Report_Column_Number-2;k=k+1;){
            value = get_2darray(Summary,i,k);
            if(k == 2){
                info = info + value + ",# ,#";
            }
            else{
                info = info + value + ",#";	
            }
        }
        F_WRITE_STR(file,info);
        F_WRITE_NEWLINE(file);	
    }   
    return(0);   
}

main()
{
    init0();
	mainform  = create_top_frame();
	Panel_upperpart = create_panel_upperpart(mainform);
	DisplayGrid  = create_grid(mainform);
	Panel_underpart = create_panel_underpart(mainform);
	init();
	MainWindow = mainform;
	
	W_MAP_FRAME(mainform);
	W_RUN_FRAME(mainform);
	W_UNMAP_FRAME(mainform);
	W_DESTROY_FRAME(mainform);
}

exit()
{
	/* 将已经加亮的模型恢复原来的颜色 */
	model_number = PM_NR_MEMBERS_IN_SET(High_Light_List);
	for (i = 0 ; i < model_number; i = i + 1){
		model = PM_GET_MEMBER_IN_SET(High_Light_List,i);
		members = PM_GET_OBJECTS_IN_GROUP(model);
	   member_number = PM_NR_MEMBERS_IN_SET(members);
	   for(i=0;i<member_number;i=i+1;){
	      model_group = PM_GET_MEMBER_IN_SET(members,i);
		   Highlight_Object(model_group,FALSE);
		}
	}
	PM_FREE_SET(Spool_List);
	PM_FREE_SET(High_Light_List);
	PM_FREE_SET(Selected_Objects);
	A_FREE(Report_Objects);
	free_2darray(Report_Info);
	free_2darray(Summary); 
}
