/* $Id: ReportFoundationList.mac,v1.0.0 2015/12/25 Wallis.liu $ */

/*
**	这个程序用于浏览及生成电缆贯通件托盘表.
*/

#include "include/dmutil.h"
#include "include/win.h"
#include "include/win_panel.h"
#include "include/PmMgeTags.h"
#include "include/pm.h"
#include "include/pm_errors.h"
#include "include/dm_errors.h"
#include "include/pm_drawings.h"
#include "include/pm_core_tags.h"
#include "include/array.mac"
#include "include/cos.h"
#include "include/dw.h"
#include "include/pm_annot.h"
#include	"include/dm_cos_schema.h"
#include	"include/geoutils.h"
#include "include/PmPipingUtils.h"
#include "opt/pm/EloTools/include/viewutilsELO.h"
#include "include/g2d_ext2df.h"
#include	"include/quants.h"
#include "include/pi_math.mac" 
#include "include/pi.h"
#include "include/PmDirectionUtils.h"

global int  Debug = 1; 

#include "$MarineToolkit/Electrical/ElectricalRepors.h"
#include "$MarineToolkit/Include/String_Utility.h"
#include "$MarineToolkit/Include/Common_Utility.h"
#include "$MarineToolkit/Include/Math_Utility.h"


/*
**脚本语言中似乎无法直接获得一个数组的实际长度，定义一个全局变量用于保存生产信息的数量
*/

#define  Report_Column_Number 22

/*
**定义界面语言
**define interface language
*/
global handle  Block_Name,Planning_Unit,Model_Description,Single_Options,Summation_Option;
global handle  DisplayGrid;
global handle  NULL_HANDLE = 0;
global int     Grid_SelectedItem = 0;
global int     Grid_SortColumn = -1;
global int     Grid_SortDirection = 1;
global handle  Object_List;          	  /*模型对象列表*/
global int     Object_Number=0;         /*模型对象数量*/
global handle  Report_Info;			  /*报表信息列表*/
global handle  Report_Objects;         /*保存报表行对应的模型对象*/
global int     Report_Row_Number = 0;	  /*报表行数*/
global handle  High_Light_List;        /*模型加亮列表*/
global handle  Selected_Rows;          /*选择的行*/
global handle  Selected_Objects;
global int     Selected_Objects_Number = 0;
global int     AutoScale = 0;
global int     AutoHighLight = 0;
global int     Summation = 0;
global handle  SummationIndexs;
global handle  MainWindow;
global handle  Grid_Title;
global handle  Report_Path,Report_Template;
global string  DataFileName = "C:\\TEMP\\elec_foundation.txt";

/*零件表相关设置*/
global float Table_Orign_X = 11.6;
global float Table_Orign_Y = 248;
global float Table_W = 190;
global float Table_H = 8;
global float Table_Column1_W = 7;
global float Table_Column2_W = 16;
global float Table_Column3_W = 7;  
global float Table_Column4_W = 40; 
global float Table_Column5_W = 7;
global float Table_Column6_W = 7;
global float Table_Column7_W = 7; 
global float Table_Column8_W = 7;
global float Table_Column9_W = 7;
global float Table_Column10_W = 7; 
global float Table_Column11_W = 7; 
global float Table_Column12_W = 7; 
global float Table_Column13_W = 7; 
global float Table_Column14_W = 7; 
global float Table_Column15_W = 7; 
global float Table_Column16_W = 7; 
global float Table_Column17_W = 9; 
global float Table_Column18_W = 7; 
global float Table_Column19_W = 10; 
global float Table_Column20_W = 10; 

global float Table_Text_Colour = 2;
global float Table_Text_Height = 2.5;

global int  Column_Number_Per_Page = 25;                           /*每页最大行数 */
global string  Cable_Seat_List_Icgd_Name = "ROC_E_Foundation";     /*电气基座制作图册icgd */


/*获取零件表列的位置*/
/*L 左对齐，M 居中，R 右对齐*/
get_column_x_position(col_num,align_type)
{
    vector = DM_VECTOR_CREATE();
    DM_VECTOR_PUSH_BACK(vector, Table_Column1_W);
    DM_VECTOR_PUSH_BACK(vector, Table_Column2_W);
    DM_VECTOR_PUSH_BACK(vector, Table_Column3_W);
    DM_VECTOR_PUSH_BACK(vector, Table_Column4_W);
    DM_VECTOR_PUSH_BACK(vector, Table_Column5_W);
    DM_VECTOR_PUSH_BACK(vector, Table_Column6_W);
    DM_VECTOR_PUSH_BACK(vector, Table_Column7_W);
    DM_VECTOR_PUSH_BACK(vector, Table_Column8_W);
    DM_VECTOR_PUSH_BACK(vector, Table_Column9_W);
    DM_VECTOR_PUSH_BACK(vector, Table_Column10_W);
    DM_VECTOR_PUSH_BACK(vector, Table_Column11_W);
    DM_VECTOR_PUSH_BACK(vector, Table_Column12_W);
    DM_VECTOR_PUSH_BACK(vector, Table_Column13_W);
    DM_VECTOR_PUSH_BACK(vector, Table_Column14_W);
    DM_VECTOR_PUSH_BACK(vector, Table_Column15_W);
    DM_VECTOR_PUSH_BACK(vector, Table_Column16_W);
    DM_VECTOR_PUSH_BACK(vector, Table_Column17_W);
    DM_VECTOR_PUSH_BACK(vector, Table_Column18_W);
    DM_VECTOR_PUSH_BACK(vector, Table_Column19_W);
    DM_VECTOR_PUSH_BACK(vector, Table_Column20_W);
    
    posx = Table_Orign_X;
    if(col_num<DM_VECTOR_SIZE(vector)){
        for (i=0;i<col_num;i=i+1){
            posx = posx + DM_VECTOR_GET(vector,i);
        }
        posx = posx - 0.5*DM_VECTOR_GET(vector,col_num-1);
    }
    
    /*默认为居中对齐*/
    DW_TATTR(0.0,0.0,5);
    if(align_type=="L"){
        posx = posx - 0.5*DM_VECTOR_GET(vector,col_num-1)+0.5;
        DW_TATTR(0.0,0.0,4);  
    }
    else if(align_type=="R"){
        posx = posx + 0.5*DM_VECTOR_GET(vector,col_num-1)-0.5;
        DW_TATTR(0.0,0.0,6);
    }
    DM_VECTOR_DELETE(vector); 
    return(posx);
}

/*
**初始化相关对象
*/
init()
{	
	Report_Info = alloc_2darray(1,1);
	Report_Objects = A_ALLOC(1);
    Selected_Rows  = A_ALLOC(1);
    SummationIndexs= A_ALLOC(1);

	/*初始化模型集合*/
	Object_List = PM_INIT_SET();
	/*初始化加亮模型集合*/
	High_Light_List = PM_INIT_SET();
	/*初始化选中的模型集合*/
	Selected_Objects = PM_INIT_SET();
	
	W_SET_PANELITEM_ARGS(Report_Path, W_PANEL_VALUE, "C:/TEMP/");
    W_SET_PANELITEM_ARGS(Report_Template, W_PANEL_VALUE, "P:/报表模板/电气设备基座制作图册.xlsx");
}

init0()
{	
	Grid_Title = A_ALLOC(Report_Column_Number, "STRING");
    A_PUT(Grid_Title,0,"分段");
    A_PUT(Grid_Title,1,"托盘");
    A_PUT(Grid_Title,2,"序号");
    A_PUT(Grid_Title,3,"底座号");
    A_PUT(Grid_Title,4,"型号");
    A_PUT(Grid_Title,5,"基座名称");
    A_PUT(Grid_Title,6,"W");
    A_PUT(Grid_Title,7,"W1");
    A_PUT(Grid_Title,8,"a");
    A_PUT(Grid_Title,9,"L");
    A_PUT(Grid_Title,10,"L1");
    A_PUT(Grid_Title,11,"b");
    A_PUT(Grid_Title,12,"D");
    A_PUT(Grid_Title,13,"c");
    A_PUT(Grid_Title,14,"d");
    A_PUT(Grid_Title,15,"a1");
    A_PUT(Grid_Title,16,"材料1");
    A_PUT(Grid_Title,17,"材料2");
    A_PUT(Grid_Title,18,"接地");
    A_PUT(Grid_Title,19,"数量");
    A_PUT(Grid_Title,20,"重量");
    A_PUT(Grid_Title,21,"备注");
}

/*
**Get the selected objects in grid
*/
get_selected_items(handle wobj)
{
	PM_SETOP_SUB(Selected_Objects, Selected_Objects);
	selected_rows = W_GET_WINDOW_ARG( wobj, W_LISTW_MSVALUE );
	total_lines = STRLEN(selected_rows);
    A_FREE(Selected_Rows);
    Selected_Rows = A_ALLOC(total_lines);
    
	k = 0;
	for (i = 0; i < total_lines; i = i + 1){
		temp_string = SUBSTRING(selected_rows,i);
		flag = HEAD(temp_string,1);
		if (flag == "1"){
			W_SET_WINDOW_ARGS( wobj, W_LISTW_ROW, i);
			selected_row = W_GET_WINDOW_ARG( wobj, W_LISTW_ITEMID );	
			model_handle = A_GET(Report_Objects, selected_row);	
			PM_ADD_OBJECT_TO_SET(model_handle,Selected_Objects);
            A_PUT(Selected_Rows,k,selected_row);
			k = k + 1;
		}
	}
	Selected_Objects_Number = k;
	return (0);
}

model_list_mode(item, event_type, selection)
{
	if (selection == 0){
		Model_Add_Mode = 0;
	}
	else{
		Model_Add_Mode = 1;
	}
	return(0);
}

get_summation_info(report)
{
    /*汇总 判断相同的列*/
    judgecols = A_ALLOC(20, "INT");
	A_PUT(judgecols,0,0);
    A_PUT(judgecols,1,1);
	A_PUT(judgecols,2,3);
    A_PUT(judgecols,3,4);
    A_PUT(judgecols,4,5);
    A_PUT(judgecols,5,6);
    A_PUT(judgecols,6,7);
    A_PUT(judgecols,7,8);
    A_PUT(judgecols,8,9);
    A_PUT(judgecols,9,10);
    A_PUT(judgecols,10,11);
    A_PUT(judgecols,11,12);
    A_PUT(judgecols,12,13);
    A_PUT(judgecols,13,14);
    A_PUT(judgecols,14,15);
    A_PUT(judgecols,15,16);
    A_PUT(judgecols,16,17);
    A_PUT(judgecols,17,18);
    /*汇总 需要汇总的列*/
    sumcols = A_ALLOC(2, "INT");
	A_PUT(sumcols,0,19);
	A_PUT(sumcols,1,20);
    
    /*汇总后的索引*/
    A_FREE(SummationIndexs);
    SummationIndexs = A_ALLOC(Report_Row_Number);
    
    /*汇总*/
    report = summation(report, judgecols, sumcols, SummationIndexs);
    A_FREE(judgecols);
    A_FREE(sumcols);
    return(0);
}

/*
**获取全局变量Object_List中保存的对象的信息，并将相关信息保存到全局变量ReportInfo中；
*/
get_report_info()
{
    /*将报表信息保存到全局变量*/
    free_2darray(Report_Info); 
    Report_Row_Number = Object_Number;
    Report_Info = alloc_2darray(Report_Row_Number,Report_Column_Number);
    Report_Objects = A_ALLOC(Report_Row_Number);   
    for(i = 0; i < Object_Number; i = i + 1;){
        object = PM_GET_MEMBER_IN_SET(Object_List, i);	
        A_PUT(Report_Objects,i,object);	
        /* 获取管段的相关信息并保存到临时数组 */
        get_object_info(object, i);
    }
    
    /*汇总*/
    if(Summation==1){
        get_summation_info(Report_Info);
        Report_Row_Number = nrows_2darray(Report_Info);
    }
    return(0);
}

/*获取指定基座的信息*/
get_object_info(object,i)
{
    /*分段*/
    block_name = get_block_name(object);
    put_2darray(Report_Info,i,0,block_name);  
   
    /*托盘*/
    planning_unit = get_planning_unit(object);
    put_2darray(Report_Info,i,1,planning_unit);  
                
    /*序号*/          
    put_2darray(Report_Info,i,2,ITOASCII(i+1)); 
   
    /*底座号*/  
    seat_no = get_seat_no(object); 
    put_2darray(Report_Info,i,3,seat_no); 
    
    /*基座型号*/  
    seat_type = get_seat_type(object);
    put_2darray(Report_Info,i,4,seat_type); 
         
    /*基座名称*/          
    seat_descr = get_seat_description(object);     
    put_2darray(Report_Info,i,5,seat_descr);      

    /*基座尺寸W*/
    seat_size_W = get_seat_parameters(object,"W");
    put_2darray(Report_Info,i,6,seat_size_W); 
   
    /*基座尺寸W1*/       
    seat_size_W1 = get_seat_parameters(object,"W1"); 
    put_2darray(Report_Info,i,7,seat_size_W1);
   
    /*基座尺寸a*/
    seat_size_a = get_seat_parameters(object,"a"); 
    put_2darray(Report_Info,i,8,seat_size_a);  
   
    /*基座尺寸L*/  
    seat_size_L = get_seat_parameters(object,"L");
    put_2darray(Report_Info,i,9,seat_size_L);  
   
    /*基座尺寸L1*/  
    seat_size_L1 = get_seat_parameters(object,"L1");
    put_2darray(Report_Info,i,10,seat_size_L1);   

    /*基座尺寸b*/  
    seat_size_b = get_seat_parameters(object,"b");
    put_2darray(Report_Info,i,11,seat_size_b);   

    /*基座尺寸D*/  
    seat_size_D = get_seat_parameters(object,"D");
    put_2darray(Report_Info,i,12,seat_size_D); 

    /*基座尺寸c*/  
    seat_size_c = get_seat_parameters(object,"c");
    put_2darray(Report_Info,i,13,seat_size_c);
   
    /*基座尺寸d*/      
    seat_size_d = get_seat_parameters(object,"d");    
    put_2darray(Report_Info,i,14,seat_size_d);   
   
    /*基座尺寸a1*/  
    seat_size_a1 = get_seat_parameters(object,"a1"); 
    put_2darray(Report_Info,i,15,seat_size_a1);   

    /*基座尺寸材料1*/
    material = get_material1(object,seat_type);  
    put_2darray(Report_Info,i,16,material); 

    /*基座尺寸材料2*/  
    material = get_material2(object,seat_type);  
    put_2darray(Report_Info,i,17,material); 
   
    /*基座接地螺栓*/      
    earth = get_seat_parameters(object,"Earth");   
    put_2darray(Report_Info,i,18,earth);   

    /*基座数量*/        
    put_2darray(Report_Info,i,19,"1");       
   
    /*基座重量*/      
    weight = get_weight_info(object);
    put_2darray(Report_Info,i,20,weight); 
    
    /*备注信息*/  
    put_2darray(Report_Info,i,21,"");  
}

/*获取参数*/
get_seat_parameters(object,title)
{
    para_str = "";
	para = PM_GET_OBJDATA(object,0, Tag_Seat_Para);
	if(ISSTRING(para)){	
		/*get seat type & size from parameter of equipment GDL*/
		flag = 1;
		while(flag){
			parameter = STRINGTERM(para,"//");
			if(parameter != ""){
				name = STRINGTERM(parameter,"=");
				value = TAIL(parameter,STRLEN(parameter)-STRLEN(name)-1);
				if(name == title){
                    para_int = string_to_int(value);
                    if(para_int>0){
                        if(title=="d"){
                            para_str = round_float_as_string(value,2);
                        }
                        else{
                            para_str = round_float_as_string(value,0);
                        }
                    }
                    else{
                        para_str = value;
                    }
					flag = 0;
				}
			}
			else{
				flag = 0;            
			}
			para = TAIL(para,STRLEN(para) - STRLEN(parameter) - 2);        
		}
	}
    para_str = rtrim_number(para_str);
	return(para_str);
}

/*获取指定模型的重量*/
get_weight_info(object)
{
    weight = PM_GET_OBJDATA(object,0, MMT_TAG_MASS);
    mass = String_To_Float(weight);
    S_PRINTF(weight,"%.2f",mass);
	return(weight);
}

/*获取指定模型的分段*/
get_block_name(object)
{
    block_name = "Unset";
    /*测试发现需要将语句执行2次才能提取到数据*/
    /* part_1 = PM_GET_MEMBER_IN_SET(object,0); */
    value = PM_GET_OBJDATA(object,0,MMT_TAG_OBJECT_IN_BLOCK);
    value = PM_GET_OBJDATA(object,0,MMT_TAG_OBJECT_IN_BLOCK);
    if(ISSTRING(value)){
        block_name = value;
    }
    return(block_name);
}

/*获取指定模型的托盘*/
get_planning_unit(object)
{
    planning_unit = "Unset";
    value = PM_GET_OBJDATA(object,0,Tag_PlanningUnit);
    if(ISSTRING(value)){
        planning_unit = value;
    }
    else{
        planning_unit = get_block_name(object);
        if(planning_unit!="Unset"){
            Set_Attribute_Value(object,Tag_PlanningUnit,planning_unit);
        }
    }
	return(planning_unit);
}

/*获取指定模型的底座号*/
get_seat_no(object)
{
    seat_no = "Unset";
    value = PM_GET_OBJDATA(object,0,Tag_Seat_No);
    if(ISSTRING(value)){
        seat_no = value;
    }
	return(seat_no);
}

/*获取指定模型的型号*/
get_seat_type(object)
{
    seat_type = "Unset";
    value = PM_GET_OBJDATA(object,0,Tag_Seat_Type);
    if(ISSTRING(value)){
        seat_type = get_string_split(value,"_",1);
    }
	return(seat_type);
}

/*获取指定模型的描述名称*/
get_seat_description(object)
{
    seat_descr = "Unset";
    value = PM_GET_OBJDATA(object,0,Tag_Seat_Desc);
    if(ISSTRING(value)){
        seat_descr = value;
    }
	return(seat_descr);
}

/*材料1*/
get_material1(object,seat_type)
{
    /*获取并设置基座的零件信息*/
    parts = PM_GET_OBJECTS_IN_GROUP(object);
    p_number = PM_NR_MEMBERS_IN_SET(parts);
    part1_1 = "";
    for (i = 0; i < p_number; i = i + 1;){
        part = PM_GET_MEMBER_IN_SET(parts, i);
        part_number = PM_GET_OBJDATA(part,0,Tag_Part_Number);
        if (part_number == "1-1"){
            part1_1 = part;
        }
    }
    
    if(!ISSTRING(part1_1)){
        part_id = PM_GET_OBJDATA(part1_1, 0, MMT_TAG_PARTID);
    }
    else{
        return("");
    }
    
    gt = DM_PARTID_DATA(part_id, "GT");
    
    /*角钢*/
    if(gt == "1"){
        size1 = PM_GET_DIMENSION(part_id, 3, 1);  
        size2 = PM_GET_DIMENSION(part_id, 3, 2);  
        if(size1 == 30 & size2 == 4){
            return("A");
        }
        else if(size1 == 40.0 & size2 == 4){
            return("B");
        }
        else if(size1 == 50.0 & size2 == 5){
            return("C");
        }
        else if(size1 == 63.0 & size2 == 6){
            return("D");
        }
        else if(size1 == 75.0 & size2 == 8){
            return("E");
        }
        else if(size1 == 100.0 & size2 == 10){
            return("F");
        }
        else{
            return("");
        }
    }
    /*钢板*/
    else if(gt == "15"){  
        size1 = PM_GET_DIMENSION(part_id, 3, 1);  
        if(size1 == 4.0){
            return("M");
        }
        else if(size1 == 5.0){
            return("N");
        }
        else if(size1 == 6.0){
            return("O");
        }
        else if(size1 == 8.0){
            return("P");
        }
        else if(size1 == 10.0){
            return("Q");
        }
        else{
            return("");
        }
    }
}

/*材料2*/
get_material2(object,seat_type)
{
    /*获取并设置基座的零件信息*/
    parts = PM_GET_OBJECTS_IN_GROUP(object);
    p_number = PM_NR_MEMBERS_IN_SET(parts);
    part2_1 = "";
    for (i = 0; i < p_number; i = i + 1;){
        part = PM_GET_MEMBER_IN_SET(parts, i);
        part_number = PM_GET_OBJDATA(part,0,Tag_Part_Number);
        if (part_number == "2-1"){
            part2_1 = part;
        }                                         
    }
    
    if(!ISSTRING(part2_1)){
        part_id = PM_GET_OBJDATA(part2_1, 0, MMT_TAG_PARTID);
    } 
    else{
        return("");
    }

    gt = DM_PARTID_DATA(part_id, "GT");
    /*角钢*/
    if(gt == "1"){
        size1 = PM_GET_DIMENSION(part_id, 3, 1);  
        size2 = PM_GET_DIMENSION(part_id, 3, 2);  
        if(size1 == 30.0 & size2 == 4){
            return("A");
        }
        else if(size1 == 40.0 & size2 == 4){
            return("B");
        }   
        else if(size1 == 50.0 & size2 == 5){
            return("C");
        }   
        else if(size1 == 63.0 & size2 == 6){
            return("D");
        }   
        else if(size1 == 75.0 & size2 == 8){
            return("E");
        } 
        else if(size1 == 100.0 & size2 == 10){
            return("F");
        } 
        else if(size2 == 19.0){
            return("R");
        }    
        else if(size2 == 27.0){
            return("G");
        }
        else if(size2 == 34.0){
            return("H");
        }  
        else if(size2 == 42.0){
            return("I");
        }   
        else if(size2 == 48.0){
            return("J");
        }    
        else if(size2 == 60.0){
            return("K");
        }     
        else if(size2 == 76.0){
            return("L");
        }              
        else{
            return("");
        }
    }  
    /*钢板*/
    else if(gt == "15"){  
        size1 = PM_GET_DIMENSION(part_id, 3, 1);  
        if(size1 == 4.0){
            return("M");
        }
        else if(size1 == 5.0){
            return("N");
        }
        else if(size1 == 6.0){
            return("O");
        }
        else if(size1 == 8.0){
            return("P");
        }
        else if(size1 == 10.0){
            return("Q");
        }
        else{
            return("");
        }
    }    
}

/*
**将全局变量object_prod_info中保存的生产信息显示到列表中；
**根据全局变量Grid_SortColumn，Grid_SortDirection保存的信息对显示列表进行排序；
*/
publish_model_info()
{
	/* 将报表信息显示到窗口中 */	
	W_SET_WINDOW_ARGS(DisplayGrid, W_LISTW_ROW, 0);
	W_SET_WINDOW_ARGS(DisplayGrid, W_LISTW_DELETEROWS, -1); 
	for (i = 0; i < Report_Row_Number; i = i + 1;){
		W_SET_WINDOW_ARGS(DisplayGrid, W_LISTW_ROW, 0);
		W_SET_WINDOW_ARGS(DisplayGrid, W_LISTW_INSERTROWS, 1);
		for (j = 0; j < Report_Column_Number; j = j + 1;){
			value = get_2darray(Report_Info,i,j);
			if (ISSTRING(value)){
				W_SET_WINDOW_ARGS(DisplayGrid, W_LISTW_ROW, 0, W_LISTW_COLUMN, j, W_LISTW_STRING, value);
			}
		}
		W_SET_WINDOW_ARGS(DisplayGrid, W_LISTW_ITEMID, i);		
	}
	W_SET_WINDOW_ARGS(DisplayGrid, W_LISTW_ROW, 1);
	
	/* 自动调整列宽度 Adjust the width of column automatically*/
	for (i=0; i < Report_Column_Number; i = i + 1;){
		W_SET_WINDOW_ARGS(DisplayGrid, W_LISTW_COLUMN, i, W_LISTW_COLUMNWIDTH, -1);
	}
	/* 对生产信息列表进行排序 */
	W_SET_WINDOW_ARGS(DisplayGrid, W_LISTW_COLUMN, Grid_SortColumn, W_LISTW_SORT, Grid_SortDirection);
}

/* 创建顶层窗体 */
create_top_frame()
{
	mainform = W_INIT_FRAME();
	W_REALIZE_WINDOW(mainform,  W_FRAME_TITLE, "电气设备基座制作图册" );	
	return(mainform);
}

/* 创建显示报表内容的格栅 */
create_grid(main_form)
{
	wobj = W_ADD_WINDOW(main_form, W_MULTISELECT, "DisplayGrid");	   
	W_REALIZE_WINDOW(wobj,  W_FRAME_RIGHT_OF,    "Block_Name",
                            W_FRAME_BELOW,       "panel_upperpart",
                            W_LISTW_COLUMNS,     Report_Column_Number,
                            W_FRAME_SCROLLBAR,   W_SCROLLBAR_RIGHTEDGE,
                            W_LISTW_HEADER_MODE, W_LISTW_HEADER_BUTTONS,
                            W_FRAME_RESIZABLE,   W_RESIZE_HORIZONTALLY,
                            W_LISTW_MODE_REPORT, 0,
                            W_FRAME_COLS,        73, 
                            W_FRAME_ROWS,        18,
                            W_LISTW_CALLBACK,    1);						   
	W_SET_WINDOW_HANDLER(wobj, "grid_handler");
	
	/* 设置格栅的列标题 */
	set_column_title(wobj, Grid_Title, Report_Column_Number);				
	return(wobj);
}

quit_handler(item, event_type, button_value)
{
	exit();
	U_MESSAGE("退出托盘表窗口");
	return(99);
}

grid_handler(window, event_type, row, column, item_id)
{  	
	if (event_type == W_EVENT_ITEM_SELECTED){
		/* 处理格栅的排序 */
		if (row < 0 & column >= 0){
			sort_grid(column,window);
			auto_number();
		}		
		else if(row >= 0 & column == 0){		
			/* 获取选中的模型 */				
			get_selected_items(DisplayGrid);			
			auto_highlight();
			auto_scale_model();			
		}		
	}	
	/* 处理双击数据行的事件 */
	else if (event_type == W_EVENT_ITEM_DOUBLECLICKED){	
		/* 获取选中的模型 */			
		get_selected_items(DisplayGrid);			
		auto_highlight();
		auto_scale_model();	
        modify_info_handler(0, 0, 0);		
	}
	return(0);
}

auto_highlight()
{
	/* 处理模型加亮 */
	if (AutoHighLight == 1){
		/* 将已经加亮的模型恢复原来的颜色 */
		model_number = PM_NR_MEMBERS_IN_SET(High_Light_List);
		for (i = 0 ; i < model_number; i = i + 1){
			model = PM_GET_MEMBER_IN_SET(High_Light_List,i);
			Highlight_Object(model,0);
		}
		temp = PM_INIT_SET();
		High_Light_List = PM_COPY_SET(temp);
		PM_FREE_SET(temp);
		
		/* 加亮选中的模型 */
		model_number = PM_NR_MEMBERS_IN_SET(Selected_Objects);
		for (i = 0; i < model_number; i = i + 1){
			model = PM_GET_MEMBER_IN_SET(Selected_Objects,i);
			Highlight_Object(model,1);
			PM_ADD_OBJECT_TO_SET(model,High_Light_List);			
		}
	}
}

auto_scale_model()
{
	/* 处理模型自动缩放 */
	if (AutoScale == 1){				
		model_number = PM_NR_MEMBERS_IN_SET(Selected_Objects);
		if (model_number == 1){
			model_handle = PM_GET_MEMBER_IN_SET(Selected_Objects,0);
			Auto_Scale(model_handle);
		}
	}
}

sort_grid(column,window)
{
	/* A column header was clicked; sort the items */
	if (Grid_SortColumn == column) {
		if (Grid_SortDirection == 0) {
			Grid_SortDirection = 1;
		}
		else {
			Grid_SortDirection = 0;
		}
	}
	else {
		Grid_SortDirection = 1;
	}
	Grid_SortColumn = column;
	W_SET_WINDOW_ARGS(window, W_LISTW_COLUMN, column, W_LISTW_SORT, Grid_SortDirection);
}

model_browsing_handler(item, event_type, button_value)
{
	W_UNMAP_FRAME(MainWindow);	
	selected_model_number = PM_NR_MEMBERS_IN_SET(High_Light_List);
	if (selected_model_number > 0){
		current_model = PM_GET_MEMBER_IN_SET(High_Light_List, 0);
		parts = PM_GET_OBJECTS_IN_GROUP(current_model);
		part = PM_GET_MEMBER_IN_SET( parts, 0);
		x0 = PM_GET_OBJDATA(part, 0, MMT_TAG_COGX);
		y0 = PM_GET_OBJDATA(part, 0, MMT_TAG_COGY);
		z0 = PM_GET_OBJDATA(part, 0, MMT_TAG_COGZ);
		x = SCAN_QUANT(1,x0);
		y = SCAN_QUANT(1,y0);
		z = SCAN_QUANT(1,z0);
		PM_SET_CURRENT_LOC(x, y, z);	
	}
	nth_part = 0;
	PM_PICK_OBJECT("浏览模型",nth_part);
	W_MAP_FRAME(MainWindow);
}

search_objects(item, event_type, button_value)
{   
	/* 获取电气设备基座 Get electrical equipment foundation group */
	temp_list = PM_INIT_SET();
    
    query = PM_INIT_QUERY("GROUP");
	groups = PM_EXECUTE_QUERY(query);
	if(!ISINT(groups)){
		group_number = PM_NR_MEMBERS_IN_SET(groups);
		for (i = 0; i < group_number; i = i + 1;){
			group_handle = PM_GET_MEMBER_IN_SET(groups, i);
			group_type = PM_GET_OBJDATA(group_handle, 0, MMT_TAG_GROUPTYPE);
			/* 过滤其它类型的组 Get rid of other type group*/
 			if (group_type == "7"){
				/* 过滤不包含零件的组Get rid of group that content nothing */	
				parts = PM_GET_OBJECTS_IN_GROUP(group_handle);
				if(!ISINT(parts)){
					part_number = PM_NR_MEMBERS_IN_SET(parts);
					if (part_number > 0){
                        part = PM_GET_MEMBER_IN_SET(parts,0);
                        type = PM_GET_OBJDATA(part,0,Tag_Seat_Type);
                        if(ISSTRING(type)){
                            flag = get_string_split(type,"_",0);
                            if(flag == "EES"){
                                result = PM_ADD_OBJECT_TO_SET(group_handle,temp_list);
                            }
                        }					     												
                    }
				}
			}			
		}
	}	
	else{
        return(0);
	}
	
	group_number = PM_NR_MEMBERS_IN_SET(temp_list);
	if (group_number <= 0){
		return 0;
	}

	filter_model(temp_list);
		
	/* 将获得的模型添加到全局变量Object_List中 */
    PM_FREE_SET(Object_List);
    Object_List = PM_INIT_SET();		
    Object_List = PM_COPY_SET(temp_list); 	
    Object_Number = PM_NR_MEMBERS_IN_SET(Object_List);
	if (Object_Number <= 0){
        get_report_info();
        publish_model_info();	   
        PM_FREE_SET(groups);
        PM_FREE_SET(temp_list);
        return(0);
	}
	
	get_report_info();
	publish_model_info();
	auto_number();
	W_SET_PANELITEM_ARGS(Single_Options,W_PANEL_SENSITIVITY,1);
}

filter_model(models)
{
	/* 获取过滤条件 Get filter conditions*/
	block_name    = W_GET_PANELITEM_ARG(Block_Name,W_PANEL_VALUE);
	planning_unit = W_GET_PANELITEM_ARG(Planning_Unit,W_PANEL_VALUE);	
	description   = W_GET_PANELITEM_ARG(Model_Description,W_PANEL_VALUE);
	temp = PM_INIT_SET();
	
	/* 过滤掉不符合条件的模型 */
	part_number = PM_NR_MEMBERS_IN_SET(models);	
	for (i = 0; i < part_number; i = i + 1;){	
        part = PM_GET_MEMBER_IN_SET(models,i);		   
        /*个别零件有可能会因为位置的关系而没有这个属性值*/
        /* model_block_name = PM_GET_OBJDATA(part,0,MMT_TAG_OBJECT_IN_BLOCK); */
        model_block_name = get_block_name(part);
        if(ISINT(model_block_name)){
            model_block_name = "Unset";
        }                                
        model_planning_unit = PM_GET_OBJDATA(part,0,Tag_PlanningUnit);
        if(ISINT(model_planning_unit)){
            model_planning_unit = "Unset";
        }
        model_descr = get_seat_description(part);

        check_block    = PATTERN_MATCH(model_block_name,block_name);
        check_planning = PATTERN_MATCH(model_planning_unit,planning_unit);	
        check_descr    = PATTERN_MATCH(model_descr,description);	
        if(check_block & check_planning & check_descr){		
            PM_ADD_OBJECT_TO_SET(part,temp);
        }	
	}
	PM_SETOP_SUB(models,models);
	PM_SETOP_OR(models,temp);
	PM_FREE_SET(temp);
	return(0);
}

auto_number()
{
    for(i=0;i<Report_Row_Number;i=i+1){
        W_SET_WINDOW_ARGS(DisplayGrid, W_LISTW_ROW, i, W_LISTW_COLUMN, 2, W_LISTW_STRING, ITOASCII(i+1));
    }
    return(0);
}

modify_info_handler(item, event_type, button_value)
{
    if(Summation==1){
		U_CONFIRM("请取消汇总重新查询后，再执行此操作");
		return(0);
    }
	/* check if already select objects in list */
	seat_number = PM_NR_MEMBERS_IN_SET(Selected_Objects);
	if (seat_number <= 0){
		U_CONFIRM("请先选择设备基座");
		return(0);
	}
	/*定义菜单信息*/   
	tag_number = 3;
	tag_description = A_ALLOC(tag_number);
	A_PUT(tag_description,0,"托盘");
	A_PUT(tag_description,1,"底座号");
    A_PUT(tag_description,2,"基座名称");

	tags = A_ALLOC(tag_number);
	A_PUT(tags,0,Tag_PlanningUnit);
	A_PUT(tags,1,Tag_Seat_No);
    A_PUT(tags,2,Tag_Seat_Desc);

    /*映射相应的列*/
	maps = A_ALLOC(tag_number);
	A_PUT(maps,0,1);
	A_PUT(maps,1,3);
    A_PUT(maps,2,5);

	/* get column number of item that will be modified */
	si = 1;
	s = DM_CALL_SCRIPT("macro/Select.mac","U_Select","选择要修改的生产信息",tag_number,tag_description,si);
	if(s<0) return(0);

	attribute_tag  = A_GET(tags, s);
	attribute_name = A_GET(tag_description, s);
    first_select_row_index = A_GET(Selected_Rows,0);
    column_number = A_GET(maps, s);
    old_value = get_2darray(Report_Info, first_select_row_index, column_number);

	/* get new value */
	U_INIT_DIALOG(" 请输入新的属性值 ");
	dialog_handle = U_SET_STR(attribute_name,old_value,25);
	if(U_DIALOG()<0) return(0);

	new_val = U_GET_STR(dialog_handle);
	if (new_val == ""){
		U_CONFIRM("输入为空值");
		return(0);
	}

	/* assign new value to selected objects */
	for (i = 0; i < seat_number; i = i + 1){
		seat_group = PM_GET_MEMBER_IN_SET(Selected_Objects, i);
        group_name = PM_GET_OBJDATA(seat_group,0, "nam");
		access = Get_Object_Access_Status(seat_group);
		if(access == "CheckOutByMe"){
			Set_Attribute_Value(seat_group, attribute_tag, new_val);		
		}
		else{
			U_CONFIRM("你没有基座<"+ group_name +">的修改权限");		
		}
	}
	
	/* refresh data grid */
	get_report_info();
	publish_model_info();
    
	temp = PM_INIT_SET();
	Selected_Objects = PM_COPY_SET(temp);
	PM_FREE_SET(temp);
}

summation_options_selected(item, event_type, dummy)
{
    is_summation = W_GET_PANELITEM_ARG(item, W_PANEL_VALUE);
    if(is_summation=="1"){
        W_SET_PANELITEM_ARGS(Single_Options,W_PANEL_SENSITIVITY,0);
        W_SET_PANELITEM_ARGS(Single_Options,W_PANEL_VALUE,"00");
        Summation = 1;
        AutoHighLight = 0;
        AutoScale = 0;
        /* 将已经加亮的模型恢复原来的颜色 */
        model_number = PM_NR_MEMBERS_IN_SET(High_Light_List);
        for (i = 0 ; i < model_number; i = i + 1){
            model = PM_GET_MEMBER_IN_SET(High_Light_List,i);
            PM_HIGHLIGHT_OBJECT(model,0,FALSE);
        }
        temp = PM_INIT_SET();
        High_Light_List = PM_COPY_SET(temp);	
        PM_FREE_SET(temp);
    }
    else{
        W_SET_PANELITEM_ARGS(Single_Options,W_PANEL_SENSITIVITY,1);
        Summation = 0;
    }
}

single_options_selected(item, event_type, dummy)
{
    if(Summation == 0){
        s = W_GET_PANELITEM_ARG(item, W_PANEL_VALUE);
        if( s == "00" ){
            AutoHighLight = 0;
            AutoScale = 0;	
            /* 将已经加亮的模型恢复原来的颜色 */
            model_number = PM_NR_MEMBERS_IN_SET(High_Light_List);
            for (i = 0 ; i < model_number; i = i + 1){
                model = PM_GET_MEMBER_IN_SET(High_Light_List,i);
                PM_HIGHLIGHT_OBJECT(model,0,FALSE);
            }
            temp = PM_INIT_SET();
            High_Light_List = PM_COPY_SET(temp);	
            PM_FREE_SET(temp);		
        }
        else if( s == "10"){
            AutoHighLight = 1;
            AutoScale = 0;	
        }
        else if( s == "11"){
            AutoHighLight = 1;
            AutoScale = 1;	
        }
        else if( s == "01"){
            AutoHighLight = 0;
            AutoScale = 1;
            /* 将已经加亮的模型恢复原来的颜色 */
            model_number = PM_NR_MEMBERS_IN_SET(High_Light_List);
            for (i = 0 ; i < model_number; i = i + 1){
                model = PM_GET_MEMBER_IN_SET(High_Light_List,i);
                PM_HIGHLIGHT_OBJECT(model,0,FALSE);
            }
            temp = PM_INIT_SET();
            High_Light_List = PM_COPY_SET(temp);
            PM_FREE_SET(temp);
        }		
    }
	return(0);
}

create_panel_upperpart(mainform)
{
	panel_upperpart = W_ADD_WINDOW(mainform, W_PANEL, "panel_upperpart");
	W_REALIZE_WINDOW(panel_upperpart,   W_FRAME_X,    0,
                                        W_FRAME_Y,    0,
                                        W_FRAME_ROWS, 2,
                                        W_FRAME_COLS, 70);
							                  					
	Block_Name = W_ADD_PANELITEM(panel_upperpart, W_PANEL_FILL, "Block_Name");
	W_REALIZE_PANELITEM(Block_Name, W_PANEL_ROW,      0, 
	                                W_PANEL_COL,      0,
                                    W_PANEL_LABEL,    "分段名称:      ",
                                    W_PANEL_LENGTH,   15,
                                    W_PANEL_VALUE,    "*",
                                    W_PANEL_CALLBACK, 1);
							              
	Planning_Unit = W_ADD_PANELITEM(panel_upperpart, W_PANEL_FILL, "Planning_Unit");
	W_REALIZE_PANELITEM(Planning_Unit,  W_PANEL_ROW,        0, 
	                                    W_PANEL_COL,        28,
                                        W_PANEL_LABEL,      "托盘代号:   ",
                                        W_PANEL_LENGTH,     15,
                                        W_PANEL_VALUE,      "*",
                                        W_PANEL_SENSITIVITY,1,
                                        W_PANEL_CALLBACK,   3);
						                  
	Model_Description = W_ADD_PANELITEM(panel_upperpart, W_PANEL_FILL, "Model_Description");
	W_REALIZE_PANELITEM(Model_Description,  W_PANEL_ROW,        1, 
                                            W_PANEL_COL,        0,
                                            W_PANEL_LABEL,      "描述名称:      ",
                                            W_PANEL_LENGTH,     15,
                                            W_PANEL_VALUE,      "*",
                                            W_PANEL_SENSITIVITY,1,
                                            W_PANEL_CALLBACK,   1);						                  
								                  							              						 							 
	search_object = W_ADD_PANELITEM(panel_upperpart, W_PANEL_BUTTON, "search_object");
	W_REALIZE_PANELITEM(search_object,  W_PANEL_ROW, 	     0, 
	                                    W_PANEL_COL,         55,
                                        W_PANEL_BUTTONIMAGE, "查找模型", 
                                        W_PANEL_WIDTH,       15,
                                        W_PANEL_BUTTONVALUE, 210,
                                        W_PANEL_CALLBACK,    1,
                                        W_PANEL_LAYOUT,      W_LAYOUT_HORIZONTAL);
							                  	
	pick_object = W_ADD_PANELITEM(panel_upperpart, W_PANEL_BUTTON, "pick_object");						                  
	W_REALIZE_PANELITEM(pick_object,    W_PANEL_ROW, 	     1, 
                                        W_PANEL_COL,         55,
                                        W_PANEL_BUTTONIMAGE, "选择模型", 
                                        W_PANEL_WIDTH,       15,
                                        W_PANEL_BUTTONVALUE, 210,
                                        W_PANEL_CALLBACK,    1,
                                        W_PANEL_LAYOUT,      W_LAYOUT_HORIZONTAL);							                  
							 							 
	Single_Options = W_ADD_PANELITEM(panel_upperpart, W_PANEL_TOGGLE, "Single_Options");
	W_REALIZE_PANELITEM(Single_Options, W_PANEL_ROW,            1, 
                                        W_PANEL_COL,            28,
                                        W_PANEL_LABEL,          "",
                                        W_PANEL_CHOICESTRING,   "加亮   ",
                                        W_PANEL_CHOICESTRING,   "缩放   ",
                                        W_PANEL_VALUE,          "00",
                                        W_PANEL_CHOICESTYLE,	W_STYLE_PUSHBUTTONS,
                                        W_PANEL_CALLBACK,       1);	
							 
	Summation_Option = W_ADD_PANELITEM(panel_upperpart, W_PANEL_TOGGLE, "Summation_Option");
	W_REALIZE_PANELITEM(Summation_Option,   W_PANEL_ROW,            1, 
                                            W_PANEL_COL,            45,
                                            W_PANEL_LABEL,          "",
                                            W_PANEL_CHOICESTRING,   "汇总   ",
                                            W_PANEL_VALUE,          "00",
                                            W_PANEL_CHOICESTYLE,	W_STYLE_PUSHBUTTONS,
                                            W_PANEL_CALLBACK,       1);	
                                    
	W_SET_PANELITEM_HANDLER(search_object, "search_objects");
	W_SET_PANELITEM_HANDLER(pick_object, "pick_objects");
	W_SET_PANELITEM_HANDLER(Single_Options, "single_options_selected");
    W_SET_PANELITEM_HANDLER(Summation_Option, "summation_options_selected");
	return(panel_upperpart);
}

pick_objects(item, event_type, dummy)
{
    loop_flag = 1;
    objects = PM_INIT_SET();
    while(loop_flag){  
        tmp = 0;
        picked_object_handle = PM_PICK_OBJECT("请选择电气设备基座", tmp, "STRUCTCMP","BEAM");
        if(!ISINT(picked_object_handle)){	   
            /*获取电气设备基座的名称*/
            group_handle = PM_GET_OBJECT_GROUP(picked_object_handle, 7);
            if (ISINT(group_handle)){
                U_CONFIRM("此零件不属于任何电气设备基座");	
            }
            else{	 	  	
                /* 判断是否电气设备基座 */
                type = PM_GET_OBJDATA(group_handle, 0, Tag_Seat_Type);
                if(ISINT(type)){
                    U_CONFIRM("此零件不属于任何电气设备基座");		      
                }
                else{
                    check = HEAD(type,1);
                    if(check == "H"){
                        U_CONFIRM("此零件不属于任何电气设备基座");
                    }
                    else{
                        Highlight_Object(group_handle,TRUE);
                        PM_ADD_OBJECT_TO_SET(group_handle,objects);
                    }
                }	
            }			
        }
        else{
            loop_flag = 0;
        }
	} 
     
	/* 将获得的模型添加到全局变量Object_List中 */
    PM_FREE_SET(Object_List);
    Object_List = PM_INIT_SET();		
	Object_List = PM_COPY_SET(objects); 	
	Object_Number = PM_NR_MEMBERS_IN_SET(Object_List);
	if (Object_Number <= 0){	   
		PM_FREE_SET(objects);
		return(0);
	}
	
	get_report_info();
	publish_model_info();
	auto_number();  
	
	for(i=0;i<Object_Number;i=i+1;){
        group_handle = PM_GET_MEMBER_IN_SET(Object_List,i);
        Highlight_Object(group_handle,FALSE);
	}
}

create_panel_underpart(mainform)
{	
	panel_underpart = W_ADD_WINDOW(mainform, W_PANEL, "panel_underpart");
	W_REALIZE_WINDOW(panel_underpart,   W_FRAME_X, 0,
                                        W_FRAME_Y, 0);

	Report_Template = W_ADD_PANELITEM(panel_underpart, W_PANEL_FILL, "Report_Template");
	W_REALIZE_PANELITEM(Report_Template,    W_PANEL_ROW, 21, 
                                            W_PANEL_COL, 0,
                                            W_PANEL_LABEL, "报表模板:     ",
                                            W_PANEL_LENGTH, 50,
                                            W_PANEL_VALUE, "*",
                                            W_PANEL_SENSITIVITY, 0,
                                            W_PANEL_CALLBACK, 1);

	select_template = W_ADD_PANELITEM(panel_underpart, W_PANEL_BUTTON, "select_template");
	W_REALIZE_PANELITEM(select_template,    W_PANEL_ROW, 	     21, 
                                            W_PANEL_COL,         61,
                                            W_PANEL_BUTTONIMAGE, "选择模板", 
                                            W_PANEL_WIDTH,       10,
                                            W_PANEL_BUTTONVALUE, 202,
                                            W_PANEL_CALLBACK,    1,
                                            W_PANEL_LAYOUT,      W_LAYOUT_HORIZONTAL);							                     

	Report_Path = W_ADD_PANELITEM(panel_underpart, W_PANEL_FILL, "Report_Path");
	W_REALIZE_PANELITEM(Report_Path,    W_PANEL_ROW,        22, 
                                        W_PANEL_COL,        0,
                                        W_PANEL_LABEL,      "保存路径:     ",
                                        W_PANEL_LENGTH,     50,
                                        W_PANEL_VALUE,      "*",
                                        W_PANEL_SENSITIVITY,0,
                                        W_PANEL_CALLBACK,   1);	
							                     
	select_path = W_ADD_PANELITEM(panel_underpart, W_PANEL_BUTTON, "select_path");
	W_REALIZE_PANELITEM(select_path,    W_PANEL_ROW, 	     22, 
                                        W_PANEL_COL,         61,
                                        W_PANEL_BUTTONIMAGE, "选择路径", 
                                        W_PANEL_WIDTH,       10,
                                        W_PANEL_BUTTONVALUE, 202,
                                        W_PANEL_CALLBACK,    1,
                                        W_PANEL_LAYOUT,      W_LAYOUT_HORIZONTAL);						                     
							                  
	export_report = W_ADD_PANELITEM(panel_underpart, W_PANEL_BUTTON, "export_report");
	W_REALIZE_PANELITEM(export_report,  W_PANEL_ROW, 	     23, 
	                                    W_PANEL_COL,         0,
                                        W_PANEL_BUTTONIMAGE, "导出Excel", 
                                        W_PANEL_WIDTH,       10,
                                        W_PANEL_BUTTONVALUE, 202,
                                        W_PANEL_CALLBACK,    1,
                                        W_PANEL_LAYOUT,      W_LAYOUT_HORIZONTAL);	
							                  
	create_report = W_ADD_PANELITEM(panel_underpart, W_PANEL_BUTTON, "create_report");
	W_REALIZE_PANELITEM(create_report,  W_PANEL_ROW, 	     23, 
	                                    W_PANEL_COL,         11,
                                        W_PANEL_BUTTONIMAGE, "生成报表", 
                                        W_PANEL_WIDTH,       10,
                                        W_PANEL_BUTTONVALUE, 202,
                                        W_PANEL_CALLBACK,    1,
                                        W_PANEL_LAYOUT,      W_LAYOUT_HORIZONTAL);

	set_seat_no = W_ADD_PANELITEM(panel_underpart, W_PANEL_BUTTON, "set_seat_no");
	W_REALIZE_PANELITEM(set_seat_no,    W_PANEL_ROW, 	     23, 
	                                    W_PANEL_COL,         22,
                                        W_PANEL_BUTTONIMAGE, "底座编号", 
                                        W_PANEL_WIDTH,       10,
                                        W_PANEL_BUTTONVALUE, 202,
                                        W_PANEL_CALLBACK,    1,
                                        W_PANEL_LAYOUT,      W_LAYOUT_HORIZONTAL);
                                                 
	model_browsing = W_ADD_PANELITEM(panel_underpart, W_PANEL_BUTTON, "model_browsing");
	W_REALIZE_PANELITEM(model_browsing, W_PANEL_ROW, 	     23, 
	                                    W_PANEL_COL,         49,
                                        W_PANEL_BUTTONIMAGE, "模型浏览", 
                                        W_PANEL_WIDTH,       10,
                                        W_PANEL_BUTTONVALUE, 202,
                                        W_PANEL_CALLBACK,    1,
                                        W_PANEL_LAYOUT,      W_LAYOUT_HORIZONTAL);
							 						 							 							 
	quit = W_ADD_PANELITEM(panel_underpart, W_PANEL_BUTTON, "quit");
	W_REALIZE_PANELITEM(quit,   W_PANEL_ROW, 	     23, 
                                W_PANEL_COL,         61,
                                W_PANEL_BUTTONIMAGE, "退出", 
                                W_PANEL_WIDTH,       10,
                                W_PANEL_BUTTONVALUE, 207,
                                W_PANEL_CALLBACK,    1,
                                W_PANEL_CLOSEBUTTON, 1,
                                W_PANEL_LAYOUT,      W_LAYOUT_HORIZONTAL);	
							 
	W_SET_PANELITEM_HANDLER(quit, "quit_handler");
	W_SET_PANELITEM_HANDLER(model_browsing, "model_browsing_handler");
	W_SET_PANELITEM_HANDLER(export_report, "export_to_excel");
	W_SET_PANELITEM_HANDLER(create_report, "export_to_drawing");
    W_SET_PANELITEM_HANDLER(set_seat_no, "auto_set_seat_no");
	W_SET_PANELITEM_HANDLER(select_path, "select_path_handler");
	W_SET_PANELITEM_HANDLER(select_template, "select_template_handler");
	return(panel_underpart);
}

auto_naming(pre_str,index_len)
{
    index_number = "00";
    if(index_len==1){
        index_number = "0";
    }
    else if(index_len==2){
        index_number = "00";
    }
    else if(index_len==3){
        index_number = "000";
    }
    else if(index_len==4){
        index_number = "0000";
    }

    for(i=1;i<3000;i=i+1;){
        seat_name = pre_str + "-" + HEAD(index_number, STRLEN(index_number) - STRLEN(ITOASCII(i))) + ITOASCII(i);
        /* find = PM_FIND_BY_NAME(seat_name); */
        /* if(ISINT(find)) return(seat_name); */
        
        find = find_isnamed(seat_name);
        if(!find) return(seat_name);
    }
    return("Undefined"); 
}

find_isnamed(seat_name)
{
	seat_number = PM_NR_MEMBERS_IN_SET(Selected_Objects);
    if(seat_number==0){
        seat_number = PM_NR_MEMBERS_IN_SET(Object_List);
        rangeObjects = Object_List;
    }
    else{
        rangeObjects = Selected_Objects;
    }

	for(i=0; i<seat_number; i=i+1;){
		seat = PM_GET_MEMBER_IN_SET(rangeObjects, i);	
        value = PM_GET_OBJDATA(seat,0, Tag_Seat_No);
        if(ISSTRING(value)){
            if(seat_name==value){
                return(1);
            }
        }
	}
    return(0);
}

/*自动生成底座号*/
auto_set_seat_no(item, event_type, dummy)
{
    if(Summation==1){
		U_CONFIRM("请取消勾选汇总重新查询后，再执行此操作");
		return(0);
    }
	/*前缀名称*/
	U_INIT_DIALOG("请输入底座号编号的前缀名称");
	prev_f = U_SET_STR("前缀名称:", "", 20);
	if(U_DIALOG()<0) return(0);
	prev_name = U_GET_STR(prev_f);
	if(prev_name == ""){
		msg = "前缀名称不能为空";
		U_MESSAGEBOX(msg, U_MB_WARNING, U_MB_OK, U_OK);
		return(0);
	}
    
    /*汇总 判断相同的列 不含底座号*/
    judgecols = A_ALLOC(20, "INT");
	A_PUT(judgecols,0,0);
    A_PUT(judgecols,1,1);
    A_PUT(judgecols,2,4);
    A_PUT(judgecols,3,5);
    A_PUT(judgecols,4,6);
    A_PUT(judgecols,5,7);
    A_PUT(judgecols,6,8);
    A_PUT(judgecols,7,9);
    A_PUT(judgecols,8,10);
    A_PUT(judgecols,9,11);
    A_PUT(judgecols,10,12);
    A_PUT(judgecols,11,13);
    A_PUT(judgecols,12,14);
    A_PUT(judgecols,13,15);
    A_PUT(judgecols,14,16);
    A_PUT(judgecols,15,17);
    A_PUT(judgecols,16,18);
    /*汇总 需要汇总的列*/
    sumcols = A_ALLOC(2, "INT");
	A_PUT(sumcols,0,19);
	A_PUT(sumcols,1,20);
    
    /*汇总后的索引*/
    A_FREE(SummationIndexs);
    SummationIndexs = A_ALLOC(Report_Row_Number);
    
    /*汇总*/
    Report_Info = summation(Report_Info, judgecols, sumcols, SummationIndexs);
    Report_Row_Number = nrows_2darray(Report_Info);
    A_FREE(judgecols);
    A_FREE(sumcols);
    
    /*编号位数*/
    index_len = 2;
    
    /* 先将编号替换成临时编号 */
    vector = DM_VECTOR_CREATE();
    for(i=0; i<Report_Row_Number; i=i+1;){
        index_str = A_GET(SummationIndexs,i);
        string_split(index_str,",",vector);   
        for(j=0; j<DM_VECTOR_SIZE(vector); j=j+1;){
            index = DM_VECTOR_GET(vector,j);
            group_handle = A_GET(Report_Objects,string_to_int(index));
            if(group_handle){
                seat_name = auto_naming("LS",3);
                access = Get_Object_Access_Status(group_handle);
                if(access == "CheckOutByMe"){
                    Set_Attribute_Value(group_handle, Tag_Seat_No, seat_name);		
                }
            }
        }
    }
    
    /* 按规则编号 */
    for(i=0; i<Report_Row_Number; i=i+1;){
        index_str = A_GET(SummationIndexs,i);
        string_split(index_str,",",vector); 
        auto_naming_flag = 1;
        for(j=0; j<DM_VECTOR_SIZE(vector); j=j+1;){
            index = DM_VECTOR_GET(vector,j);
            group_handle = A_GET(Report_Objects,string_to_int(index));
            if(group_handle){
                if(auto_naming_flag){
                    /* prev_name = get_planning_unit(group_handle); */
                    seat_name = auto_naming(prev_name,index_len);
                    auto_naming_flag = 0; 
                }
                access = Get_Object_Access_Status(group_handle);
                group_name = PM_GET_OBJDATA(group_handle,0, "nam");
                if(access == "CheckOutByMe"){
                    Set_Attribute_Value(group_handle, Tag_Seat_No, seat_name);		
                }
                else{
                    U_MESSAGE("没有基座<"+ group_name +">的修改权限");		
                }
            }
        }
    }
    DM_VECTOR_DELETE(vector);
    
	/* refresh data grid */
	get_report_info();
	publish_model_info();

	temp = PM_INIT_SET();
	Selected_Objects = PM_COPY_SET(temp);
	PM_FREE_SET(temp);
}

select_path_handler(item, event_type, dummy)
{
    path = U_GET_DIRECTORY("选择报表保存路径","C:/TEMP/","",0);
    if(ISSTRING(path)){
        W_SET_PANELITEM_ARGS(Report_Path,W_PANEL_VALUE,path+"/");
    }
}

select_template_handler(item, event_type, dummy)
{
    flag = 0;
    template = U_GET_FILENAME("请选择模板文件", "P:\\报表模板\\","电气设备基座制作图册.xlsx", "Excel File(*.xlsx)\nExcel File(*.xlsx)\nAll Files(*.*)",2,flag);
    if(ISSTRING(template)){
        W_SET_PANELITEM_ARGS(Report_Template,W_PANEL_VALUE,template);
    }
}

export_to_excel(item, event_type, dummy)
{
    random_string = get_random_string();
    DataFileName = "C:\\TEMP\\elec_foundation"+random_string+".txt";
	if ( F_EXIST(DataFileName) ){
		check = F_DELETE_FILE(DataFileName);
		if (check == -1){
			U_MESSAGEBOX("请先关闭文件" + DataFileName, U_MB_ERROR, U_MB_OK, U_MB_OK);
			return(-1);
		}
	}
	
	flag = F_CREATE_FILE(DataFileName);
	if (flag == -1){
		U_CONFIRM("用户对文件:" + DataFileName + "所在路径没有写权限" );
		return(-1);
	}

	file = F_OPEN_FILE(DataFileName,"w");
	
    /* 获取模板文件 */
    unix_tmp_path = W_GET_PANELITEM_ARG(Report_Template,W_PANEL_VALUE);
	if(!F_EXIST(unix_tmp_path)){
		msg = "模板文件 <" + unix_tmp_path + "> 不存在";
		U_CONFIRM(msg);
		return(-1);
	}	
	/* 模板文件后缀名 */
    unix_tmp_suffix = SEARCH(unix_tmp_path, ".");
    
	/* 获取.NET程序路径 */
	unix_exe_path = SYS_GETENV("MarineToolkit") + "\\NET_Programs\\SDARI_Elec_Report.exe";

	/*获取报表文件(excel)名称*/
	U_INIT_DIALOG("请输入报表文件名称");
	name_f = U_SET_STR("Excel文件名:", "", 20);
	if(U_DIALOG()<0) return(0);

	doc_name = U_GET_STR(name_f);
	if(doc_name == ""){
		msg = "文件名不能为空";
		U_MESSAGEBOX(msg, U_MB_WARNING, U_MB_OK, U_OK);
		return(0);
	}
	
	/*获取报表文件的保存路径*/
	unix_rep_path = W_GET_PANELITEM_ARG(Report_Path,W_PANEL_VALUE);
	if(!F_EXIST(unix_rep_path)){
		msg = "路径 <" + unix_rep_path + "> 不存在";
		U_MESSAGEBOX(msg, U_MB_ERROR, U_MB_OK, U_OK);
		return(-1);
	}	
	
	unix_rep_file = unix_rep_path + doc_name + unix_tmp_suffix;
	win_tmp_path = S_REPLACE(unix_tmp_path, "/", "\\");
	win_exe_path = S_REPLACE(unix_exe_path, "/", "\\");
	win_rep_file = S_REPLACE(unix_rep_file, "/", "\\");
	
	res = write_to_temp_file(file);
	F_CLOSE_FILE(file);

	cmd = win_exe_path + " " + win_tmp_path + " " + DataFileName + " " + win_rep_file;
    if(res) SYS_EXEC_CMND(cmd);		
	return(1);
}

export_to_drawing(item, event_type, dummy)
{
	flag = 1;
	while(flag){
	    U_INIT_DIALOG("请输入报表的图形名称");
		drawing_name = ""; 
 		i_m = U_SET_STR("ElectricalReport",drawing_name,30); 
 		if( U_DIALOG() >= 0 ){
            drawing_name = U_GET_STR(i_m);	   
            doc_guid = "";
            res = PM_FIND_DRAWING_WITH_NAME(drawing_name,doc_guid);	
            if(res <= 0){
                flag = 0;
            }
            else{
                U_CONFIRM("该图名已存在！");
            }
 		}
        else{
            return(-1);
        }
	}
    
    /*生成图纸*/   
    dname = "";
    bom_set = PM_INIT_SET();
	header_tag_rec = DM_INIT_TAGREC();
	icgd_name = Cable_Seat_List_Icgd_Name;
    res = PM_CREATE_DRAWING(drawing_name, "ElectricalReport", PM_DRW_CFLG_GLOBAL, bom_set, icgd_name, header_tag_rec, dname);
    DM_FREE_TAGREC(header_tag_rec);
    if(res != 0){
        return(-1);
    }  
      
    res = PM_OPEN_DRAWING(drawing_name,PM_DRW_OFLG_EDIT,"","");
    if(res != 0){
        U_MESSAGE("无法打开图形:" + drawing_name);
        return(-1);
    }   
    write_data_to_drawing();
   
    W_UNMAP_FRAME(MainWindow);
	st = PM_EDIT_ACTIVE_DRW(0);
	W_MAP_FRAME(MainWindow);
    return(0);      
}

write_data_to_drawing()
{
    U_INIT_DIALOG("请输入报表的信息");
    block = ""; 
    phase = ""; 
    drawingno = ""; 
    i_m1 = U_SET_STR("分段",block,30); 
    i_m2 = U_SET_STR("阶段",phase,30);
    i_m3 = U_SET_STR("图号",drawingno,30);
    if( U_DIALOG() >= 0 ){
        block = U_GET_STR(i_m1);
        phase = U_GET_STR(i_m2);
        drawingno = U_GET_STR(i_m3);
    }
    /*页码信息位置*/
    page_x = 184.5;
    page_y = 281;
    block_x = 184.5;
    block_y = 275;
    phase_x = 184.5;
    phase_y = 269;
    drawingno_x = 184.5;
    drawingno_y = 263;
    
    /*计算页数*/ 
    page_number = Report_Row_Number / Column_Number_Per_Page;
    page_number = String_To_Int(STRINGTERM(FTOASCII(page_number),"."));
    if(page_number*Column_Number_Per_Page != Report_Row_Number){
        page_number = page_number + 1;
    }
   
    icgd_name = Cable_Seat_List_Icgd_Name;
    for(i=1;i<page_number;i=i+1;){
        PM_ADD_PAGE_TO_DRW(icgd_name, 0);
    }
    
    /*汇总重量位置*/
    tot_weight_x = 186;
    tot_weight_y = 42;
    /*汇总数量位置*/
    tot_count_x = 177;
    tot_count_y = 42;
    
    y_offset = 0.5;   
    for(i=1;i<=page_number;i=i+1;){
        PM_ACTIVATE_PAGE_IN_DRW(i);
        style_name = "";
        drafting_style = get_first_drafting_style(style_name); 
        dw = PM_START_PAGE_ANNOTATION(style_name);
        DW_ACTIVATEVIEW(dw); 
        DW_COLOR(Table_Text_Colour);
        DW_TSIZE(Table_Text_Height);           
        for(j=0;j<Column_Number_Per_Page;j=j+1;){
            row_number = (i-1)*Column_Number_Per_Page + j; 
            if(row_number >= Report_Row_Number){
                DW_TATTR(0.0,0.0,5);
                /* 重量等信息 */
                total_count = get_total_count();
				DW_TEXT(tot_count_x, tot_count_y, total_count); 
                total_weight = get_total_weight();
                DW_TEXT(tot_weight_x, tot_weight_y, total_weight);  
                /* 页码等信息 */
                DW_TEXT(page_x, page_y, ITOASCII(i+1));
                DW_TEXT(block_x, block_y, block);
                DW_TEXT(phase_x, phase_y, phase);
                DW_TEXT(drawingno_x, drawingno_y, drawingno);
				PM_TERMINATE_PAGE_ANNOTATION(1);                
                PM_TERMINATE_PAGE_ANNOTATION(1);
                return(0);             
            }
            /*Y坐标*/
            y = Table_Orign_Y - Table_H * (j + y_offset);
            
            /*序号*/  
            x = get_column_x_position(1,"M");
            text = ITOASCII(row_number+1);
            DW_TEXT(x, y, text);      

            /*底座号*/
            x = get_column_x_position(2,"L");
            text = get_string(row_number,1);
            DW_TEXT(x, y, text);  
            
            /*型号*/
            x = get_column_x_position(3,"L");
            text = get_string(row_number,2);
            DW_TEXT(x, y, text);  	
            
            /*名称*/
            x = get_column_x_position(4,"L");
            text = get_string(row_number,3);
            DW_TEXT(x, y, text);
            
            /*W*/
            x = get_column_x_position(5,"L");
            text = get_string(row_number,4);
            DW_TEXT(x, y, text);
            
            /*W1*/
            x = get_column_x_position(6,"L");
            text = get_string(row_number,5);
            DW_TEXT(x, y, text);

            /*a*/
            x = get_column_x_position(7,"L");
            text = get_string(row_number,6);
            DW_TEXT(x, y, text);

            /*L*/
            x = get_column_x_position(8,"L");
            text = get_string(row_number,7);
            DW_TEXT(x, y, text); 

            /*L1*/
            x = get_column_x_position(9,"L");
            text = get_string(row_number,8);
            DW_TEXT(x, y, text); 

            /*b*/
            x = get_column_x_position(10,"L");
            text = get_string(row_number,9);
            DW_TEXT(x, y, text);    

            /*D*/
            x = get_column_x_position(11,"L");
            text = get_string(row_number,10);
            DW_TEXT(x, y, text);   

            /*c*/
            x = get_column_x_position(12,"L");
            text = get_string(row_number,11);
            DW_TEXT(x, y, text); 

            /*d*/
            x = get_column_x_position(13,"L");
            text = get_string(row_number,12);
            DW_TEXT(x, y, text);   

            /*a1*/
            x = get_column_x_position(14,"L");
            text = get_string(row_number,13);
            DW_TEXT(x, y, text);                                                                                      

            /*材料1*/
            x = get_column_x_position(15,"L");
            text = get_string(row_number,14);
            DW_TEXT(x, y, text);  

            /*材料2*/
            x = get_column_x_position(16,"L");
            text = get_string(row_number,15);
            DW_TEXT(x, y, text);          

            /*接地*/
            x = get_column_x_position(17,"L");
            text = get_string(row_number,16);
            DW_TEXT(x, y, text); 

            /*数量*/
            x = get_column_x_position(18,"M");
            text = get_string(row_number,17);
            DW_TEXT(x, y, text);         

            /*重量*/
            x = get_column_x_position(19,"L");
            text = get_string(row_number,18);
            DW_TEXT(x, y, text);         

            /*备注*/
            x = get_column_x_position(20,"L");
            text = get_string(row_number,19);
            DW_TEXT(x, y, text);           
        }   
        DW_TATTR(0.0,0.0,5);
        /* 重量等信息 */
        total_count = get_total_count();
        DW_TEXT(tot_count_x, tot_count_y, total_count);        
        total_weight = get_total_weight();
        DW_TEXT(tot_weight_x, tot_weight_y, total_weight);
        /* 页码等信息 */
        DW_TEXT(page_x, page_y, ITOASCII(i+1));
        DW_TEXT(block_x, block_y, block);
        DW_TEXT(phase_x, phase_y, phase);
        DW_TEXT(drawingno_x, drawingno_y, drawingno);
        PM_TERMINATE_PAGE_ANNOTATION(1);          
    }
    return(0);   
}

/*总数量 汇总在最后一页*/
get_total_count()
{
    count = 0;
    for(i=0;i<Report_Row_Number;i=i+1;){
        part_count = String_To_Float(get_2darray(Report_Info,i,19));
        count = count + part_count;
    }
    value = "";
    S_PRINTF(value ,"%.0f",count);
    return(value);
}

get_total_weight()
{
    weight = 0;
    for(i=0;i<Report_Row_Number;i=i+1;){
        part_weight = string_to_float(get_2darray(Report_Info,i,20));
        weight = weight + part_weight;
    }
    value = "";
    S_PRINTF(value ,"%.2f",weight);
    return(value);
}

get_string(row_number,order)
{
    W_SET_WINDOW_ARGS(DisplayGrid,W_LISTW_ROW,row_number);
    item_id = W_GET_WINDOW_ARG(DisplayGrid,W_LISTW_ITEMID);   
    valve = get_2darray(Report_Info,item_id,order+2);
    return(valve);
}

write_to_temp_file(file)
{    
	/*图名图号信息*/
	U_INIT_DIALOG("请输入图号信息");
    s_f1 = U_SET_STR("图  名:", "XXXXX分段电气设备基座制作图册", 30);
    s_f2 = U_SET_STR("图  号:", "", 30);
    if(U_DIALOG()<0){
        U_MESSAGE("用户取消操作");
        return(0);
    }
    drawing_name = U_GET_STR(s_f1);
    drawing_no   = U_GET_STR(s_f2);
	info = "电气设备基座制作图册" + ",#";
    F_WRITE_STR(file,info);
    F_WRITE_NEWLINE(file);
    info = "Title" + ",#" + drawing_name + ",#2,#5,#";
    F_WRITE_STR(file,info);
    F_WRITE_NEWLINE(file);
    info = "Title" + ",#" + drawing_no + ",#2,#20,#";
   	F_WRITE_STR(file,info);
   	F_WRITE_NEWLINE(file);	
    /*托盘表信息*/
    info = "Table,#电气设备基座制作图册" + ",#6,#3,#22";
    F_WRITE_STR(file,info);
    F_WRITE_NEWLINE(file);	
    
    for(i=0;i<Report_Row_Number;i=i+1;){   
        info = "Line,#"+ITOASCII(i+1)+",#";
        W_SET_WINDOW_ARGS(DisplayGrid,W_LISTW_ROW,i);
        item_id = W_GET_WINDOW_ARG(DisplayGrid,W_LISTW_ITEMID);
        for(k=3;k<Report_Column_Number;k=k+1;){
            value = get_2darray(Report_Info,item_id,k);
            if(k == 100){
                /*在这里增加合并单元格的列*/
                info = info + value + ",# ,#";
            }
            else{
                info = info + value + ",#";	
            }
        }
        F_WRITE_STR(file,info);
        F_WRITE_NEWLINE(file);	
    }
    return(1);  
}

main()
{
    init0();
    mainform  = create_top_frame();
    Panel_upperpart = create_panel_upperpart(mainform);
    DisplayGrid  = create_grid(mainform);
    Panel_underpart = create_panel_underpart(mainform);
    init();
    MainWindow = mainform;

    W_MAP_FRAME(mainform);
    W_RUN_FRAME(mainform);
    W_UNMAP_FRAME(mainform);
    W_DESTROY_FRAME(mainform);
}

exit()
{
	/* 将已经加亮的模型恢复原来的颜色 */
	model_number = PM_NR_MEMBERS_IN_SET(High_Light_List);
	for (i = 0 ; i < model_number; i = i + 1){
		model = PM_GET_MEMBER_IN_SET(High_Light_List,i);
		PM_HIGHLIGHT_OBJECT(model,0,FALSE);
	}
	PM_FREE_SET(Object_List);
	PM_FREE_SET(High_Light_List);
	PM_FREE_SET(Selected_Objects);
	A_FREE(Report_Objects);
}
