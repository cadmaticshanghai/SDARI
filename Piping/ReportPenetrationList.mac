/* $Id: ReportPenetrationList.mac,v1.0.0 2019/07/30 Jack.Leng $ */

/*
**	这个程序用于生成挡水圈清册.
*/

#include "include/dmutil.h"
#include "include/win.h"
#include "include/win_panel.h"
#include "include/PmMgeTags.h"
#include "include/pm.h"
#include "include/pm_errors.h"
#include "include/dm_errors.h"
#include "include/pm_drawings.h"
#include "include/pm_core_tags.h"
#include "include/array.mac"
#include "include/cos.h"
#include "include/dw.h"
#include "include/pm_annot.h"
#include "include/dm_cos_schema.h"
#include "include/geoutils.h"
#include "include/PmPipingUtils.h"
#include "opt/pm/EloTools/include/viewutilsELO.h"
#include "include/g2d_ext2df.h"
#include "include/quants.h"
#include "include/pi_math.mac" 
#include "include/pi.h"

global int  Debug = 1; 

#include "$MarineToolkit/Piping/ReportPenetrationList.h"
#include "$MarineToolkit/Include/String_Utility.h"
#include "$MarineToolkit/Include/Common_Utility.h"
#include "$MarineToolkit/Include/Grid_Utility.h"
#include "$MarineToolkit/Include/Math_Utility.h"
#include "$MarineToolkit/Include/Piping_Utility.h"

/*
**define size of array
*/

#define  Report_Column_Number 10

/*
**定义界面语言
**define interface language
*/
global handle  BlockName,PlanningUnit,PenetrationName;
global handle  DisplayGrid;
global handle  NULL_HANDLE = 0;
global int     Grid_SelectedItem = 0;
global int     Grid_SortColumn = -1;
global int     Grid_SortDirection = 1;
global handle  Penetration_List;            /*挡水圈handle列表*/
global int     Penetration_Number=0;        /*挡水圈数量*/
global handle  Report_Info;			       /*报表信息列表*/
global handle  Report_Objects;              /*保存报表行对应的挡水圈*/
global int     Report_Row_Number = 0;	       /*报表行数*/
global handle  High_Light_List;             /*模型加亮列表*/
global handle  Selected_Rows;               /*选择的行*/
global handle  Selected_Objects;
global int     Selected_Objects_Number = 0;
global int     AutoScale = 0;
global int     AutoHighLight = 0;
global handle  MainWindow;
global handle  Grid_Title;
global int     Maximum_Report_Row_Number = 1000;
global handle  Report_Path,Report_Template;
global string  DataFileName = "C:\\TEMP\\pipe_penetration_report.txt";
global handle  Summary;

/*
**初始化相关对象
*/
init()
{	
	Report_Info = alloc_2darray(1,1);
	Report_Objects = A_ALLOC(1);
    Selected_Rows  = A_ALLOC(1);
    Summary = alloc_2darray(1,1);

	/*初始化模型集合*/
	Penetration_List = PM_INIT_SET();

	/*初始化加亮模型集合*/
	High_Light_List = PM_INIT_SET();
	
	/*初始化选中的模型集合*/
	Selected_Objects = PM_INIT_SET();
	
	W_SET_PANELITEM_ARGS(Report_Path, W_PANEL_VALUE, "C:/TEMP/");
	
	W_SET_PANELITEM_ARGS(Report_Template, W_PANEL_VALUE, "P:/报表模板/挡水圈清册.xlsx");
}

init0()
{	
	Grid_Title = A_ALLOC(Report_Column_Number, "STRING");
	A_PUT(Grid_Title,0,"分段");
	A_PUT(Grid_Title,1,"托盘");
	A_PUT(Grid_Title,2,"编号");
	A_PUT(Grid_Title,3,"型号规格");
	A_PUT(Grid_Title,4,"材质");
	A_PUT(Grid_Title,5,"长度");
	A_PUT(Grid_Title,6,"表面积");
    A_PUT(Grid_Title,7,"表面处理");
	A_PUT(Grid_Title,8,"重量");
    A_PUT(Grid_Title,9,"备注");
}

/*
**Get the selected objects in grid
*/
get_selected_items(handle wobj)
{
	PM_SETOP_SUB(Selected_Objects, Selected_Objects);
	selected_rows = W_GET_WINDOW_ARG( wobj, W_LISTW_MSVALUE );
	total_lines = STRLEN(selected_rows);
    A_FREE(Selected_Rows);
    Selected_Rows = A_ALLOC(total_lines);
    
	k = 0;
	for (i = 0; i < total_lines; i = i + 1){
		temp_string = SUBSTRING(selected_rows,i);
		flag = HEAD(temp_string,1);
		if (flag == "1"){
			W_SET_WINDOW_ARGS( wobj, W_LISTW_ROW, i);
			selected_row = W_GET_WINDOW_ARG( wobj, W_LISTW_ITEMID );	
			model_handle = A_GET(Report_Objects, selected_row);	
			PM_ADD_OBJECT_TO_SET(model_handle,Selected_Objects);
            A_PUT(Selected_Rows,k,selected_row);
			k = k + 1;
		}
	}
	Selected_Objects_Number = k;
	return (0);
}

model_list_mode(item, event_type, selection)
{
	if (selection == 0){
		Model_Add_Mode = 0;
	}
	else{
		Model_Add_Mode = 1;
	}
	return(0);
}

/*
**get information of penetration stored in array 'Penetration_List' and save in array 'ReportInfo'；
*/
get_report_info()
{
    /*define a temperary array for report information*/
	report = alloc_2darray(2000,Report_Column_Number);
	penetrations = A_ALLOC(2000);

	row_number = 0;
	for (i = 0; i < Penetration_Number; i = i + 1;){
		penetration = PM_GET_MEMBER_IN_SET(Penetration_List, i);	
		/* get penetration information and save to local array */
		get_penetration_info(penetration, report, row_number, penetrations);
	}	
    
    /*汇总 判断相同的列*/
    judgecols = A_ALLOC(2, "INT");
	A_PUT(judgecols,0,3);
	A_PUT(judgecols,1,4);
    /*汇总 需要汇总的列*/
    sumcols = A_ALLOC(3, "INT");
	A_PUT(sumcols,0,5);
	A_PUT(sumcols,1,6);
    A_PUT(sumcols,2,8);
    
    free_2darray(Summary);
    Summary = summation(report, judgecols, sumcols);
    
    A_FREE(judgecols);
    A_FREE(sumcols);
    
	/*save report information to global array*/
	Report_Row_Number = row_number;
    free_2darray(Report_Info);    
    Report_Info = alloc_2darray(Report_Row_Number,Report_Column_Number);
    A_FREE(Report_Objects);
    Report_Objects = A_ALLOC(Report_Row_Number);
	for(i=0;i<row_number;i=i+1;){
        for(j=0;j<Report_Column_Number;j=j+1;){
	      value = get_2darray(report,i,j);
	      put_2darray(Report_Info, i, j, value);	
        }
        penetration = A_GET(penetrations,i);
        A_PUT(Report_Objects,i,penetration);
	}
	A_FREE(penetrations);

	free_2darray(report);	
	return(0);
}

/*材料汇总*/
/*inputlist  字符串二维数组ARRAY*/
/*judgecols  判断相同的列ARRAY*/
/*sumcols    要累加的列ARRAY*/
/*reslist    返回二维数组ARRAY*/
summation(inputlist, judgecols, sumcols)
{
    rows = nrows_2darray(inputlist);
    cols = ncols_2darray(inputlist);
    judge_rows = get_array_length(judgecols);
    
    /*有效行数*/
    inputnum = 0;
    templist = DM_VECTOR_CREATE();
    for (i=0;i<rows;i=i+1){
        tempstr = ""; 
        for (j=0;j<judge_rows;j=j+1){
            part_val = string_val(get_2darray(inputlist,i,A_GET(judgecols,j))); 
            if(part_val!="0"){
                tempstr = tempstr+ "<*>" + part_val; 
            }
        }
        if(tempstr!=""){
            DM_VECTOR_PUSH_BACK(templist, tempstr);
            inputnum = inputnum + 1;
        }
    }

    uniquelist = DM_VECTOR_CREATE();
    vector_unique(templist,uniquelist);
    DM_VECTOR_SORT(uniquelist, "string", DM_ARRAY_SORT_ASCENDING); 
    urows = DM_VECTOR_SIZE(uniquelist);
    reslist = alloc_2darray(urows, cols);
    taglist = DM_VECTOR_CREATE();

    /*累加求和*/
    sum_rows = get_array_length(sumcols);
    for (m=0;m<urows;m=m+1){
        for (s=0;s<sum_rows;s=s+1){
            sum_m = 0;
            tag_m = "";
            cell_m = DM_VECTOR_GET(uniquelist,m); 
            for (n=0;n<inputnum;n=n+1){
                cell_n = DM_VECTOR_GET(templist,n); 
                if (cell_m==cell_n){
                    sum_m = sum_m + float_val(get_2darray(inputlist,n,A_GET(sumcols,s)));
                    /* sum_m = sum_m + float_val(get_2darray(inputlist,n,sumindex)); */
                    tag_m = tag_m + string_val(n) + ",";
                }
            }
            put_2darray(reslist,m,A_GET(sumcols,s),rtrim_number(string_val(sum_m)));
        }
        DM_VECTOR_PUSH_BACK(taglist, string_val(tag_m));
    }

    for (i=0;i<urows;i=i+1){
        /*索引*/
        tag  = DM_VECTOR_GET(taglist,i); 
        index = String_To_Int(STRINGTERM(tag, ","));
        
        for (j=0;j<cols;j=j+1){
            flag = get_2darray(reslist,i,j);
            if(flag<=0){
                put_2darray(reslist,i,j, get_2darray(inputlist,index,j));
            }
        }
    }
    
    DM_VECTOR_DELETE(taglist); 
    DM_VECTOR_DELETE(templist); 
    DM_VECTOR_DELETE(uniquelist);
    return(reslist);
}

/*get penetration part information*/
get_penetration_info(penetration,report,row_number,penetrations)
{
    pent_parts = PM_GET_OBJECTS_IN_GROUP(penetration);
    part_number = PM_NR_MEMBERS_IN_SET(pent_parts); 
    for(i=0;i<part_number;i=i+1;){
        part = PM_GET_MEMBER_IN_SET(pent_parts,i);
        part_id = PM_GET_OBJDATA(part,0, MMT_TAG_PARTID);
        obj_type = PM_GET_OBJDATA(part,0, MMT_TAG_OBJTYPE);
        if(obj_type!=3){
            /*通过area属性过滤腹板*/
            value = PM_GET_OBJDATA(part,0, "are");
            if(!ISSTRING(value)){
                /*分段*/
                block_name = get_block_name(penetration);
                /*管段的托盘作为挡水圈托盘*/
                planning_unit = get_penetration_planning_unit(penetration);
                /*挡水圈编号*/
                penetration_name = get_penetration_name(penetration,Penetration_List); 
                /*通过mdl文件解析长度,面积,重量*/
                description = ""; length = ""; area = ""; weight = "";
                relocate(penetration,description,length,area,weight);
                /*挡水圈材质*/
                material = get_penetration_material(penetration);
                /*挡水圈表面处理*/
                surfacetreatment = get_penetration_surfacetreatment(penetration);
                /*挡水圈备注信息*/
                remark = get_penetration_remark(penetration);
                
                put_2darray(report,row_number,0,block_name);
                put_2darray(report,row_number,1,planning_unit);        
                put_2darray(report,row_number,2,penetration_name);
                put_2darray(report,row_number,3,description);
                put_2darray(report,row_number,4,material);
                put_2darray(report,row_number,5,length);
                put_2darray(report,row_number,6,area);
                put_2darray(report,row_number,7,surfacetreatment);
                put_2darray(report,row_number,8,weight);
                put_2darray(report,row_number,9,remark);
                
                A_PUT(penetrations,row_number,penetration);
                row_number = row_number + 1; 
            }
        }
    }
    return(0);
} 

get_block_name(penetration)
{
    block_name = "Unset";
    /*测试发现需要将语句执行2次才能提取到数据*/
    value = PM_GET_OBJDATA(penetration,0,MMT_TAG_OBJECT_IN_BLOCK);
    value = PM_GET_OBJDATA(penetration,0,MMT_TAG_OBJECT_IN_BLOCK);
    if(ISSTRING(value)){
        block_name = value;
    }
    return (block_name);
}

/* 挡水圈的托盘为其所属的管段的托盘 */
get_penetration_planning_unit(penetration)
{
    planning_unit = "Unset";
    pent_parts = PM_GET_OBJECTS_IN_GROUP(penetration);
    part_number = PM_NR_MEMBERS_IN_SET(pent_parts);        
    for(i=0;i<part_number;i=i+1;){
        part = PM_GET_MEMBER_IN_SET(pent_parts,i);
        /*part_id = PM_GET_OBJDATA(part,0, MMT_TAG_PARTID);*/
        obj_type = PM_GET_OBJDATA(part,0, MMT_TAG_OBJTYPE);
        if (obj_type==3){
            xmin = 0; xmax = 0; ymin = 0; ymax = 0; zmin = 0; zmax = 0;
            res = PM_GET_BBOX_OF_OBJECT(part, xmin, xmax, ymin, ymax, zmin, zmax); 
            obj_type = 3;
            pipes = Search_Models_Intersect_Box(xmin,ymin,zmin,xmax,ymax,zmax,obj_type);
            if(!ISINT(pipes)){
                pipe = PM_GET_MEMBER_IN_SET(pipes,0);
                spool_handle = PM_GET_OBJECT_GROUP(pipe,0);	/* 获取管段的handle */
                if(!ISINT(spool_handle)){	
                    model_planning_unit = Get_Attribute_Value(spool_handle, Tag_Spool_PlanningUnit);
                    if(ISSTRING(model_planning_unit)){
                        planning_unit = model_planning_unit;
                        return(planning_unit);
                    }
                }
            }
        }
    }
	return(planning_unit);
}

/* 挡水圈的件号命名 */
get_penetration_name(penetration,models)
{
    penetration_name = "Unset";
    value = PM_GET_OBJDATA(penetration,0,Tag_Penetration_Name);
    if(ISSTRING(value)){
        penetration_name = value;
    }
    else{
        planning_unit = get_penetration_planning_unit(penetration);
        penetration_name = auto_naming(planning_unit,models);
		check_name = PATTERN_MATCH(penetration_name,"Unset*");
		if(!check_name){	
		    Set_Attribute_Value(penetration,Tag_Penetration_Name,penetration_name);
	    }
    }
    return (penetration_name);
}

/* 挡水圈的材质 */
get_penetration_material(penetration)
{
    material = "Q235A";
    pent_parts = PM_GET_OBJECTS_IN_GROUP(penetration);
    part_number = PM_NR_MEMBERS_IN_SET(pent_parts);        
    for(i=0;i<part_number;i=i+1;){
        part = PM_GET_MEMBER_IN_SET(pent_parts,i);
        /*part_id = PM_GET_OBJDATA(part,0, MMT_TAG_PARTID);*/
        obj_type = PM_GET_OBJDATA(part,0, MMT_TAG_OBJTYPE);
        if (obj_type==4){
            part_pid = PM_GET_OBJDATA(part,0, "pid");
            if(ISSTRING(part_pid)){
                /*Shape 1 型挡水圈*/
                value = DM_PARTID_DATA(part_pid,"MC");
                if(ISSTRING(value)){
                    material = value;
                }
            }
            else{
                part_pid = PM_GET_OBJDATA(part,0, "_PZ");
                if(ISSTRING(part_pid)){
                    /*Shape 0 型挡水圈*/
                    value = DM_PARTID_DATA(part_pid,"MC");
                    if(ISSTRING(value)){
                        material = value;
                    }
                }
            }
        }
    }
    return (material);
}

/* 挡水圈的表面处理 */
get_penetration_surfacetreatment(penetration)
{
    surfacetreatment = "油漆";
    value = PM_GET_OBJDATA(penetration,0,Tag_Penetration_SurfaceTreatment);
    if(ISSTRING(value)){
        surfacetreatment = value;
    }
    else{
        Set_Attribute_Value(penetration,Tag_Penetration_SurfaceTreatment,surfacetreatment);
    }
    return (surfacetreatment);
}

/* 挡水圈的备注信息 */
get_penetration_remark(penetration)
{
    remark = "";
    value = PM_GET_OBJDATA(penetration,0,Tag_Penetration_Remark);
    if(ISSTRING(value)){
        remark = value;
    }
    return (remark);
}

/*
**将全局变量object_prod_info中保存的生产信息显示到列表中；
**根据全局变量Grid_SortColumn，Grid_SortDirection保存的信息对显示列表进行排序；
*/
publish_model_info()
{
	/* 将报表信息显示到窗口中 */	
	W_SET_WINDOW_ARGS(DisplayGrid, W_LISTW_ROW, 0);
	W_SET_WINDOW_ARGS(DisplayGrid, W_LISTW_DELETEROWS, -1); 
	for (i = 0; i < Report_Row_Number; i = i + 1;){
		W_SET_WINDOW_ARGS(DisplayGrid, W_LISTW_ROW, 0);
		W_SET_WINDOW_ARGS(DisplayGrid, W_LISTW_INSERTROWS, 1);
		for ( j = 0; j < Report_Column_Number; j = j + 1;){
			Value = get_2darray(Report_Info,i,j);
			if (ISSTRING(Value)){
				W_SET_WINDOW_ARGS(DisplayGrid, W_LISTW_ROW, 0, W_LISTW_COLUMN, j, W_LISTW_STRING, Value);
			}
		}		
		W_SET_WINDOW_ARGS(DisplayGrid, W_LISTW_ITEMID, i);		
	}
	
	W_SET_WINDOW_ARGS(DisplayGrid, W_LISTW_ROW, 1);
	
	/* 自动调整列宽度 Adjust the width of column automatically*/
	for (i=0; i < Report_Column_Number; i = i + 1;){
		W_SET_WINDOW_ARGS(DisplayGrid, W_LISTW_COLUMN, i, W_LISTW_COLUMNWIDTH, -1);
	}
	
	/* 对生产信息列表进行排序 */
	W_SET_WINDOW_ARGS(DisplayGrid, W_LISTW_COLUMN, Grid_SortColumn, W_LISTW_SORT, Grid_SortDirection);
}
/*
**创建顶层窗体
**Create Top frame
*/
create_top_frame()
{
	mainform = W_INIT_FRAME();
	W_REALIZE_WINDOW(mainform,  W_FRAME_TITLE, "挡水圈清册" );	
	return(mainform);
}

/*
**创建显示报表内容的格栅
*/
create_grid(main_form)
{
	wobj = W_ADD_WINDOW(main_form, W_MULTISELECT, "DisplayGrid");
	W_REALIZE_WINDOW(wobj,  W_FRAME_RIGHT_OF,    "BlockName",
                            W_FRAME_BELOW,       "panel_upperpart",
                            W_LISTW_COLUMNS,     Report_Column_Number,
                            W_FRAME_SCROLLBAR,   W_SCROLLBAR_RIGHTEDGE,
                            W_LISTW_HEADER_MODE, W_LISTW_HEADER_BUTTONS,
                            W_LISTW_MODE_REPORT, 0,
                            W_FRAME_COLS,        73, 
                            W_FRAME_ROWS,        17,
                            W_LISTW_CALLBACK,    1);						   
	W_SET_WINDOW_HANDLER(wobj, "grid_handler");
	
	/*
	**设置格栅的列标题
	*/	
	set_column_title(wobj, Grid_Title, Report_Column_Number);				
	return(wobj);
}


quit_handler(item, event_type, button_value)
{
	exit();
	U_MESSAGE("退出挡水圈清册窗口");
	return(99);
}

grid_handler(window, event_type, row, column, item_id)
{  	
	if (event_type == W_EVENT_ITEM_SELECTED) {
		/* 处理格栅的排序 */
		if (row < 0 & column >= 0) {
			sort_grid(column,window);
		}		
		else if(row >= 0 & column == 0){		
			/* 获取选中的模型 */				
			get_selected_items(DisplayGrid);			
			auto_highlight();
			auto_scale_model();			
		}		
	}	
	/* 处理双击数据行的事件 */
	else if (event_type == W_EVENT_ITEM_DOUBLECLICKED) {	
		/* 获取选中的模型 */			
		get_selected_items(DisplayGrid);			
		auto_highlight();
		auto_scale_model();	
        modify_info_handler(0, 0, 0);		
	}
	return(0);
}

auto_highlight()
{
	/* 处理模型加亮 */
	if (AutoHighLight == 1){
		/* 将已经加亮的模型恢复原来的颜色 */
		model_number = PM_NR_MEMBERS_IN_SET(High_Light_List);
		for (i = 0 ; i < model_number; i = i + 1){
			model = PM_GET_MEMBER_IN_SET(High_Light_List,i);
			members = PM_GET_OBJECTS_IN_GROUP(model);
            member_number = PM_NR_MEMBERS_IN_SET(members);
            for(i=0;i<member_number;i=i+1;){
                model_group = PM_GET_MEMBER_IN_SET(members,i);
                Highlight_Object(model_group,FALSE);
			}
		}
		temp = PM_INIT_SET();
		High_Light_List = PM_COPY_SET(temp);
		PM_FREE_SET(temp);
		
		/* 加亮选中的模型 */
		model_number = PM_NR_MEMBERS_IN_SET(Selected_Objects);
		for (i = 0; i < model_number; i = i + 1){
			model = PM_GET_MEMBER_IN_SET(Selected_Objects,i);
			members = PM_GET_OBJECTS_IN_GROUP(model);
            member_number = PM_NR_MEMBERS_IN_SET(members);
            for(i=0;i<member_number;i=i+1;){
                model_group = PM_GET_MEMBER_IN_SET(members,i);
                Highlight_Object(model_group,TRUE);
			}
			PM_ADD_OBJECT_TO_SET(model,High_Light_List);			
		}
	}
}

auto_scale_model()
{
	/* 处理模型自动缩放 */
	if (AutoScale == 1){				
		model_number = PM_NR_MEMBERS_IN_SET(Selected_Objects);
		if (model_number == 1){
			model_handle = PM_GET_MEMBER_IN_SET(Selected_Objects,0);
			Auto_Scale(model_handle);
		}
	}
}

sort_grid(column,window)
{
	/* A column header was clicked; sort the items */
	if (Grid_SortColumn == column) {
		if (Grid_SortDirection == 0) {
			Grid_SortDirection = 1;
		}
		else {
			Grid_SortDirection = 0;
		}
	}
	else {
		Grid_SortDirection = 1;
	}
	Grid_SortColumn = column;
	if(Grid_SortColumn == 3){
        W_SET_WINDOW_ARGS(window, W_LISTW_COLUMN, column, W_LISTW_SORT, Grid_SortDirection);
	}
}

modify_info_handler(item, event_type, button_value)
{
	/* check if already select objects in list */
	penetration_number = PM_NR_MEMBERS_IN_SET(Selected_Objects);
	if (penetration_number <= 0){
		U_CONFIRM("请先选择挡水圈");
		return(0);
	}
	/*定义菜单信息*/   
	tag_number = 3;
	tag_description = A_ALLOC(3);
	A_PUT(tag_description,0,"挡水圈编号");
	A_PUT(tag_description,1,"表面处理");
	A_PUT(tag_description,2,"备注信息");
	
	tags = A_ALLOC(tag_number);
	A_PUT(tags,0,Tag_Penetration_Name);
	A_PUT(tags,1,Tag_Penetration_SurfaceTreatment);
	A_PUT(tags,2,Tag_Penetration_Remark);
    
    /*映射相应的列*/
	maps = A_ALLOC(tag_number);
	A_PUT(maps,0,2);
	A_PUT(maps,1,7);
	A_PUT(maps,2,9);
    
	/* get column number of item that will be modified */
	si = 1;
	s = DM_CALL_SCRIPT("macro/Select.mac","U_Select","选择要修改的生产信息",tag_number,tag_description,si);
	if ( s < 0 ){
		return(0);
	}

	attribute_tag  = A_GET( tags, s);
	attribute_name = A_GET( tag_description, s);
    
    first_select_row_index = A_GET(Selected_Rows,0);
    column_number  = A_GET( maps, s);
    old_value = get_2darray(Report_Info, first_select_row_index, column_number);

	/* get new value */
	U_INIT_DIALOG(" 请输入新的属性值 ");
	dialog_handle = U_SET_STR(attribute_name,old_value,25);
	if( U_DIALOG() < 0 ){
		return(0);
	}
	new_val = U_GET_STR(dialog_handle);
	if (new_val == ""){
		U_CONFIRM("输入为空值");
		return(0);
	}

	/* assign new value to selected objects */
	for (i = 0; i < penetration_number; i = i + 1){
		penetration = PM_GET_MEMBER_IN_SET(Selected_Objects, i);
		penetration_part = get_penetration_plate(penetration);
        row_index = A_GET(Selected_Rows,i);
        penetration_name = get_2darray(Report_Info, row_index, 2);
		access = Get_Object_Access_Status(penetration_part);
		if(access == "CheckOutByMe"){
			Set_Attribute_Value(penetration, attribute_tag, new_val);		
		}
		else{
			U_CONFIRM("你没有挡水圈<"+ penetration_name +">的修改权限");		
		}
	}
	
	/* refresh data grid */
	get_report_info();
	publish_model_info();

	temp = PM_INIT_SET();
	Selected_Objects = PM_COPY_SET(temp);
	PM_FREE_SET(temp);
}

get_penetration_plate(penetration)
{
	members = PM_GET_OBJECTS_IN_GROUP(penetration);
	members_number = PM_NR_MEMBERS_IN_SET(members);
	for(i=0;i<members_number;i=i+1;){
		part = PM_GET_MEMBER_IN_SET(members,i);
		type = PM_GET_OBJDATA(part,0, MMT_TAG_OBJTYPE);
		if(type == "4"){
			return(part);
		}	
	}
	return(0);
}

model_browsing_handler(item, event_type, button_value)
{
	W_UNMAP_FRAME(MainWindow);	
	selected_model_number = PM_NR_MEMBERS_IN_SET(High_Light_List);
	if (selected_model_number > 0){
		current_model = PM_GET_MEMBER_IN_SET(High_Light_List, 0);
		parts = PM_GET_OBJECTS_IN_GROUP(current_model);
		part = PM_GET_MEMBER_IN_SET( parts, 0);
		x0 = PM_GET_OBJDATA(part, 0, MMT_TAG_COGX);
		y0 = PM_GET_OBJDATA(part, 0, MMT_TAG_COGY);
		z0 = PM_GET_OBJDATA(part, 0, MMT_TAG_COGZ);
		x = SCAN_QUANT(1,x0);
		y = SCAN_QUANT(1,y0);
		z = SCAN_QUANT(1,z0);
		PM_SET_CURRENT_LOC(x, y, z);	
	}
	nth_part = 0;
	PM_PICK_OBJECT("浏览模型",nth_part);
	W_MAP_FRAME(MainWindow);
}

search_model(item, event_type, button_value)
{   
	/* Get the hvac penetration group */
	temp_list = PM_INIT_SET();
    query = PM_INIT_QUERY("GROUP");
	groups = PM_EXECUTE_QUERY(query);
	if (!ISINT(groups)){
		group_number = PM_NR_MEMBERS_IN_SET(groups);
		for (i = 0; i < group_number; i = i + 1;){
			group_handle = PM_GET_MEMBER_IN_SET(groups, i);
			group_type = PM_GET_OBJDATA(group_handle, 0, MMT_TAG_GROUPTYPE);
			/* Get rid of other type group*/
 			if (group_type == Group_Type){
				/* 过滤不包含零件的组Get rid of group that content nothing */	
				parts = PM_GET_OBJECTS_IN_GROUP(group_handle);
				if (parts != 0){
					part_number = PM_NR_MEMBERS_IN_SET(parts);
					if (part_number !=0){
					    /* 将挡水圈的handle保存到全局数组 */
						result = PM_ADD_OBJECT_TO_SET(group_handle,temp_list);
					}
				}
			}			
		}
	}
	
	model_number = PM_NR_MEMBERS_IN_SET(temp_list);
	if (model_number <= 0){
		return 0;
	}
	
	filter_model(temp_list);
	
	/* put the result to the array 'Penetration_List' */
    PM_FREE_SET(Penetration_List);
    Penetration_List = PM_INIT_SET();		
	Penetration_List = PM_COPY_SET(temp_list); 	

	Penetration_Number = PM_NR_MEMBERS_IN_SET(Penetration_List);
	if (Penetration_Number <= 0){
		PM_FREE_SET(temp_list);
		return 0;
	}
	
	PM_FREE_SET(temp_list);
	/* get penetration information and publish to grid */
	get_report_info();
	publish_model_info();
}

filter_model(models)
{
	/* 获取过滤条件 Get filter conditions*/
	block_name = W_GET_PANELITEM_ARG(BlockName, W_PANEL_VALUE);
	planning_unit = W_GET_PANELITEM_ARG(PlanningUnit, W_PANEL_VALUE);
    penetration_name = W_GET_PANELITEM_ARG(PenetrationName, W_PANEL_VALUE);
	temp = PM_INIT_SET();
	
	/* 过滤掉不符合条件的模型 */
	penetration_number = PM_NR_MEMBERS_IN_SET(models);
	for (i = 0; i < penetration_number; i = i + 1;){
		penetration = PM_GET_MEMBER_IN_SET(models, i);	

        model_block_name = get_block_name(penetration);
        if(model_block_name == "Unset"){
            model_block_name = "*";
        }
        model_planning_unit = get_penetration_planning_unit(penetration);
        if(model_planning_unit == "Unset"){
            model_planning_unit = "*";
        }
        model_penetration_name = get_penetration_name(penetration,models);
        if(model_penetration_name == "Unset"){
            model_penetration_name = "*";
        }
        
        check_block = PATTERN_MATCH(model_block_name, block_name);
		check_planning_unit = PATTERN_MATCH(model_planning_unit, planning_unit);
		check_name =  PATTERN_MATCH(model_penetration_name,penetration_name);
		if(check_block & check_planning_unit & check_name){	
		    PM_ADD_OBJECT_TO_SET(penetration,temp);
	    }				
	}
	PM_SETOP_SUB(models,models);
	PM_SETOP_OR(models,temp);
	PM_FREE_SET(temp);
	return(0);
}

options_selected(item, event_type, dummy)
{
	s = W_GET_PANELITEM_ARG(item, W_PANEL_VALUE);
	if ( s == "00" ){
		AutoHighLight = 0;
		AutoScale = 0;	
		/* 将已经加亮的模型恢复原来的颜色 */
		model_number = PM_NR_MEMBERS_IN_SET(High_Light_List);
		for (i = 0 ; i < model_number; i = i + 1){
			model = PM_GET_MEMBER_IN_SET(High_Light_List,i);
			Highlight_Object(model,FALSE);
		}
		temp = PM_INIT_SET();
		High_Light_List = PM_COPY_SET(temp);	
		PM_FREE_SET(temp);		
	}
	else if( s == "10"){
		AutoHighLight = 1;
		AutoScale = 0;	
	}
	else if( s == "11"){
		AutoHighLight = 1;
		AutoScale = 1;	
	}
	else if( s == "01"){
		AutoHighLight = 0;
		AutoScale = 1;
		/* 将已经加亮的模型恢复原来的颜色 */
		model_number = PM_NR_MEMBERS_IN_SET(High_Light_List);
		for (i = 0 ; i < model_number; i = i + 1){
			model = PM_GET_MEMBER_IN_SET(High_Light_List,i);
			Highlight_Object(model,FALSE);
		}
		temp = PM_INIT_SET();
		High_Light_List = PM_COPY_SET(temp);
		PM_FREE_SET(temp);
	}		
	return(0);
}

create_panel_upperpart(mainform)
{
	panel_upperpart = W_ADD_WINDOW(mainform, W_PANEL, "panel_upperpart");
	W_REALIZE_WINDOW(panel_upperpart,   W_FRAME_X, 0,
                                        W_FRAME_Y, 0,
                                        W_FRAME_ROWS, 2,
                                        W_FRAME_COLS, 70);
							            	
	BlockName = W_ADD_PANELITEM(panel_upperpart, W_PANEL_FILL, "BlockName");
	W_REALIZE_PANELITEM(BlockName, W_PANEL_ROW, 0, 
	                                W_PANEL_COL, 0,
                                    W_PANEL_LABEL, "分段:  ",
                                    W_PANEL_LENGTH, 8,
                                    W_PANEL_VALUE, "*",
                                    W_PANEL_CALLBACK, 1);

	PlanningUnit = W_ADD_PANELITEM(panel_upperpart, W_PANEL_FILL, "PlanningUnit");
	W_REALIZE_PANELITEM(PlanningUnit,   W_PANEL_ROW,      0, 
	                                    W_PANEL_COL,      15,
                                        W_PANEL_LABEL,    "托盘:  ",
                                        W_PANEL_LENGTH,   8,
                                        W_PANEL_VALUE,    "*",
                                        W_PANEL_CALLBACK, 3);

	PenetrationName = W_ADD_PANELITEM(panel_upperpart, W_PANEL_FILL, "PenetrationName");
	W_REALIZE_PANELITEM(PenetrationName,    W_PANEL_ROW,      0, 
	                                    W_PANEL_COL,      30,
							                  W_PANEL_LABEL,    "名称:  ",
							                  W_PANEL_LENGTH,   8,
							                  W_PANEL_VALUE,    "*",
							                  W_PANEL_CALLBACK, 3);
                                              
	Search_Model = W_ADD_PANELITEM(panel_upperpart, W_PANEL_BUTTON, "Search_Model");
	W_REALIZE_PANELITEM(Search_Model,   W_PANEL_ROW, 	     0, 
                                        W_PANEL_COL,         45,
                                        W_PANEL_BUTTONIMAGE, "查找", 
                                        W_PANEL_WIDTH,       8,
                                        W_PANEL_BUTTONVALUE, 210,
                                        W_PANEL_CALLBACK,    1,
                                        W_PANEL_LAYOUT,      W_LAYOUT_HORIZONTAL);	
                                        
	Options = W_ADD_PANELITEM(panel_upperpart, W_PANEL_TOGGLE, "options");
	W_REALIZE_PANELITEM(Options,    W_PANEL_ROW, 1, W_PANEL_COL, 50,
                                    W_PANEL_LABEL, "",
                                    W_PANEL_CHOICESTRING, "自动加亮    ",
                                    W_PANEL_CHOICESTRING, "自动缩放    ",
                                    W_PANEL_VALUE, "00",
                                    W_PANEL_CHOICESTYLE,	W_STYLE_PUSHBUTTONS,
                                    W_PANEL_CALLBACK, 1);			
                                    
	W_SET_PANELITEM_HANDLER(Search_Model, "search_model");
	W_SET_PANELITEM_HANDLER(Options, "options_selected");
	return(panel_upperpart);
}

create_panel_underpart(mainform)
{	
	panel_underpart = W_ADD_WINDOW(mainform, W_PANEL, "panel_underpart");
	W_REALIZE_WINDOW(panel_underpart,   W_FRAME_X, 0,  W_FRAME_Y, 0);

	Report_Template = W_ADD_PANELITEM(panel_underpart, W_PANEL_FILL, "Report_Template");
	W_REALIZE_PANELITEM(Report_Template,W_PANEL_ROW, 20, 
                                        W_PANEL_COL, 0,
                                        W_PANEL_LABEL, "报表模板:     ",
                                        W_PANEL_LENGTH, 49,
                                        W_PANEL_VALUE, "*",
                                        W_PANEL_SENSITIVITY, 0,
                                        W_PANEL_CALLBACK, 1);

	select_template = W_ADD_PANELITEM(panel_underpart, W_PANEL_BUTTON, "select_template");
	W_REALIZE_PANELITEM(select_template,W_PANEL_ROW, 	     20, 
	                                    W_PANEL_COL,         61,
                                        W_PANEL_BUTTONIMAGE, "选择模板", 
                                        W_PANEL_WIDTH,       10,
                                        W_PANEL_BUTTONVALUE, 202,
                                        W_PANEL_CALLBACK,    1,
                                        W_PANEL_LAYOUT,      W_LAYOUT_HORIZONTAL);							                     

	Report_Path = W_ADD_PANELITEM(panel_underpart, W_PANEL_FILL, "Report_Path");
	W_REALIZE_PANELITEM(Report_Path,    W_PANEL_ROW, 21, 
                                        W_PANEL_COL, 0,
                                        W_PANEL_LABEL, "保存路径:     ",
                                        W_PANEL_LENGTH, 49,
                                        W_PANEL_VALUE, "*",
                                        W_PANEL_SENSITIVITY, 0,
                                        W_PANEL_CALLBACK, 1);	
							                     
	select_path = W_ADD_PANELITEM(panel_underpart, W_PANEL_BUTTON, "select_path");
	W_REALIZE_PANELITEM(select_path,    W_PANEL_ROW, 	      21, 
                                        W_PANEL_COL,         61,
                                        W_PANEL_BUTTONIMAGE, "选择路径", 
                                        W_PANEL_WIDTH,       10,
                                        W_PANEL_BUTTONVALUE, 202,
                                        W_PANEL_CALLBACK,    1,
                                        W_PANEL_LAYOUT,      W_LAYOUT_HORIZONTAL);						                     
							                  
	export_report = W_ADD_PANELITEM(panel_underpart, W_PANEL_BUTTON, "export_report");
	W_REALIZE_PANELITEM(export_report,  W_PANEL_ROW, 	      22, 
	                                    W_PANEL_COL,         0,
                                        W_PANEL_BUTTONIMAGE, "导出报表", 
                                        W_PANEL_WIDTH,       10,
                                        W_PANEL_BUTTONVALUE, 202,
                                        W_PANEL_CALLBACK,    1,
                                        W_PANEL_LAYOUT,      W_LAYOUT_HORIZONTAL);							    
														 							 
	model_browsing = W_ADD_PANELITEM(panel_underpart, W_PANEL_BUTTON, "model_browsing");
	W_REALIZE_PANELITEM(model_browsing, W_PANEL_ROW, 	      22, 
	                                    W_PANEL_COL,         49,
                                        W_PANEL_BUTTONIMAGE, "模型浏览", 
                                        W_PANEL_WIDTH,       10,
                                        W_PANEL_BUTTONVALUE, 202,
                                        W_PANEL_CALLBACK,    1,
                                        W_PANEL_LAYOUT,      W_LAYOUT_HORIZONTAL);
 
	quit = W_ADD_PANELITEM(panel_underpart, W_PANEL_BUTTON, "quit");
	W_REALIZE_PANELITEM(quit,   W_PANEL_ROW, 	     22, 
	                            W_PANEL_COL,         61,
                                W_PANEL_BUTTONIMAGE, "退出", 
                                W_PANEL_WIDTH,       10,
                                W_PANEL_BUTTONVALUE, 207,
                                W_PANEL_CALLBACK,    1,
                                W_PANEL_CLOSEBUTTON, 1,
                                W_PANEL_LAYOUT,      W_LAYOUT_HORIZONTAL);	
							 
	W_SET_PANELITEM_HANDLER(quit, "quit_handler");
	W_SET_PANELITEM_HANDLER(model_browsing, "model_browsing_handler");
	W_SET_PANELITEM_HANDLER(export_report, "export_to_excel");
	W_SET_PANELITEM_HANDLER(select_path, "select_path_handler");
	W_SET_PANELITEM_HANDLER(select_template, "select_template_handler");
	return(panel_underpart);
}

select_path_handler(item, event_type, dummy)
{
    path = U_GET_DIRECTORY("选择报表保存路径","C:/TEMP/","",0);
    if(ISSTRING(path)){
        W_SET_PANELITEM_ARGS(Report_Path,W_PANEL_VALUE,path+"/");
    }
}

select_template_handler(item, event_type, dummy)
{
    flag = 0;
    template = U_GET_FILENAME("请选择模板文件", "P:\\报表模板\\","风挡水圈托盘表.xlsx", "Excel File(*.xlsx)\nExcel File(*.xlsx)\nAll Files(*.*)",2 ,flag);
    if(ISSTRING(template)){
        W_SET_PANELITEM_ARGS(Report_Template,W_PANEL_VALUE,template);
    }
}

export_to_excel(item, event_type, dummy)
{
    random_string = get_random_string();
    DataFileName = "C:\\TEMP\\pipe_penetration_report"+random_string+".txt";
	if ( F_EXIST(DataFileName) ){
		check = F_DELETE_FILE(DataFileName);
		if (check == -1){
			U_MESSAGEBOX("请先关闭文件" + DataFileName, U_MB_ERROR, U_MB_OK, U_MB_OK);
			return(-1);
		}
	}
	
	flag = F_CREATE_FILE(DataFileName);
	if (flag == -1){
		U_CONFIRM("用户对文件:" + DataFileName + "所在路径没有写权限" );
		return(-1);
	}

	file = F_OPEN_FILE(DataFileName,"w");
	
    /* 获取模板文件 */
    unix_tmp_path = W_GET_PANELITEM_ARG(Report_Template,W_PANEL_VALUE);
	if(!F_EXIST(unix_tmp_path)){
		msg = "模板文件 <" + unix_tmp_path + "> 不存在";
		U_CONFIRM(msg);
		return(-1);
	}
    /* 模板文件后缀名 */
    unix_tmp_suffix = SEARCH(unix_tmp_path, ".");
	
	/* 获取.NET程序路径 */
	unix_exe_path = SYS_GETENV("MarineToolkit") + "\\NET_Programs\\SDARI_Hvac_Report.exe";

	/*获取报表文件(excel)名称*/
	U_INIT_DIALOG("请输入报表文件名称");
	name_f = U_SET_STR("Excel文件名:", "", 20);
	if(U_DIALOG() < 0){
		return(0);
	}
	doc_name = U_GET_STR(name_f);
	if(doc_name == ""){
		msg = "文件名不能为空";
		U_MESSAGEBOX(msg, U_MB_WARNING, U_MB_OK, U_OK);
		return(0);
	}
	
	/*获取报表文件的保存路径*/
	unix_rep_path = W_GET_PANELITEM_ARG(Report_Path,W_PANEL_VALUE);
	if(!F_EXIST(unix_rep_path)){
		msg = "路径 <" + unix_rep_path + "> 不存在";
		U_MESSAGEBOX(msg, U_MB_ERROR, U_MB_OK, U_OK);
		return(-1);
	}	
	
	unix_rep_file = unix_rep_path + doc_name + unix_tmp_suffix;
	
	win_tmp_path = S_REPLACE(unix_tmp_path, "/", "\\");
	win_exe_path = S_REPLACE(unix_exe_path, "/", "\\");
	win_rep_file = S_REPLACE(unix_rep_file, "/", "\\");
	write_to_temp_file(file);
	F_CLOSE_FILE(file);

	cmd = win_exe_path + " " + win_tmp_path + " " + DataFileName + " " + win_rep_file;
	SYS_EXEC_CMND(cmd);	
	return(0);
}

write_to_temp_file(file)
{    
	/*项目信息*/
    res = Get_Project_Attribute(Tag_Project_Number);
    if (!ISSTRING(res)){
        project_number = "";
    }else{
        project_number = res;
    }
    res = Get_Project_Attribute(Tag_Project_Description);
    if (!ISSTRING(res)){
        project_descr = "";
    }else{
        project_descr = res;
    }
    
    planning_unit = W_GET_PANELITEM_ARG(PlanningUnit, W_PANEL_VALUE);
	U_INIT_DIALOG("请输入托盘信息");
    s_f1 = U_SET_STR("托盘号:", planning_unit, 18);
    s_f2 = U_SET_STR("图  号:", "", 18);
    if(U_DIALOG()<0){
        U_MESSAGE("用户取消操作");
        return(0);
    }
    planning_unit = U_GET_STR(s_f1);
    drawing_number= U_GET_STR(s_f2);

    info = "挡水圈清册" + ",#" + project_number + ",#" + project_descr + ",#" + planning_unit + ",#" + drawing_number + ",#";
   	F_WRITE_STR(file,info);
   	F_WRITE_NEWLINE(file);	

    /*托盘表信息*/
    info = "Table,#挡水圈清册" + ",#5,#1,#9";
    F_WRITE_STR(file,info);
    F_WRITE_NEWLINE(file);	
    
    mto_number = 1;
    prev = "";
    for(i=0;i<Report_Row_Number;i=i+1;){   
        info = "Line,#";
        W_SET_WINDOW_ARGS(DisplayGrid,W_LISTW_ROW,i);
        item_id = W_GET_WINDOW_ARG(DisplayGrid,W_LISTW_ITEMID);
        for(k=2;k<Report_Column_Number;k=k+1;){
            value = get_2darray(Report_Info,item_id,k);
            if(k == 2){         
                if(i==0){
                 info = info + ITOASCII(mto_number) + ",#";
                 prev = value;
                 info = info + value + ",#";
                }
                else{
                    if(prev == value){
                        info = info + " ,#";
                        info = info + " ,#";
                    }
                    else{
                        mto_number = mto_number + 1;
                        info = info + ITOASCII(mto_number) + ",#";
                        prev = value;
                        info = info + value + ",#";
                    }
                }
            }
            else{
                if(k == 100){
                    /*报表模板中有合并的单元格，在此补空值*/
                    info = info + value + ",# ,#";
                }
                else{
                    info = info + value + ",#";
                }
            }
        }
        F_WRITE_STR(file,info);
        F_WRITE_NEWLINE(file);
    }  
    
    F_WRITE_NEWLINE(file);
    F_WRITE_NEWLINE(file);
    
    info = "Table,#挡水圈材料汇总" + ",#5,#1,#8";
    F_WRITE_STR(file,info);
    F_WRITE_NEWLINE(file);	
    
    srows = nrows_2darray(Summary);
    for(i=0;i<srows;i=i+1;){   
        info = "Line,#"+ITOASCII(i+1)+",";
        for(k=2;k<Report_Column_Number;k=k+1;){
            value = get_2darray(Summary,i,k);
            if(k == 2){
                value = "#挡水圈";
            }
            if(k != 7 & k != 9){
                info = info + value + ",#";	
            }
        }
        F_WRITE_STR(file,info);
        F_WRITE_NEWLINE(file);	
    }  
    return(0);   
}

get_random_string()
{
   time = GET_TIME();
   date_string = CNV_DATE(time,2);
   time_sring = TRANS(CNV_TIME(time,1),":","-");
   random_string = date_string + "-" + time_sring; 
   return random_string;
}

set_column_title(handle wobj, column_titles, column_number)
{
	for (i = 0; i < column_number; i = i + 1;){
		title = A_GET(column_titles,i);
		if (ISSTRING(title)){
			W_SET_WINDOW_ARGS(wobj, W_LISTW_COLUMN, i, W_LISTW_HEADER, title);
			W_SET_WINDOW_ARGS(wobj, W_LISTW_COLUMN, i, W_LISTW_COLUMNWIDTH,-1);
			W_SET_WINDOW_ARGS(wobj, W_LISTW_COLUMN, i, W_LISTW_ITEMTYPE, W_LISTW_STRING_COLUMN); 
		}
		else {
			return(0);
		}
	}
	return(0);
}

main()
{
    init0();
	mainform  = create_top_frame();
	Panel_upperpart = create_panel_upperpart(mainform);
	DisplayGrid = create_grid(mainform);
	Panel_underpart = create_panel_underpart(mainform);
	init();
	MainWindow = mainform;
	
	W_MAP_FRAME(mainform);
	W_RUN_FRAME(mainform);
	W_UNMAP_FRAME(mainform);
	W_DESTROY_FRAME(mainform);
}

exit()
{
	/* 将已经加亮的模型恢复原来的颜色 */
	model_number = PM_NR_MEMBERS_IN_SET(High_Light_List);
	for (i = 0 ; i < model_number; i = i + 1){
        model = PM_GET_MEMBER_IN_SET(High_Light_List,i);
        members = PM_GET_OBJECTS_IN_GROUP(model);
        member_number = PM_NR_MEMBERS_IN_SET(members);
        for(i=0;i<member_number;i=i+1;){
            model_group = PM_GET_MEMBER_IN_SET(members,i);
            Highlight_Object(model_group,FALSE);
        }
	}
	PM_FREE_SET(Penetration_List);
	PM_FREE_SET(High_Light_List);
	PM_FREE_SET(Selected_Objects);
	A_FREE(Report_Objects);
	free_2darray(Report_Info);
    free_2darray(Summary);
}
