/* $Id: DeleteElecEquiSeat.mac,v1.0.0 2018/09/27 Wallis.liu $ */

/*
**	这个程序用于删除电气设备基座.
*/
#include "include/dmutil.h"
#include "include/win.h"
#include "include/win_panel.h"
#include "include/PmMgeTags.h"
#include "include/pm.h"
#include "include/pm_core_tags.h"
#include "include/array.mac"
#include "include/geoutils.h"
#include "include/cos.h"
#include "include/dw.h"
#include "include/PmDirectionUtils.h"
#include "include/quants.h"

#include "$MarineToolkit/ElectricalEquipmentSeat/ElecEquiSeat.h"

main()
{ 
    if(!license()){
        return(0);
    } 
    flag = 1;
    while(flag){
        tmp = 0;
        picked_object_handle = PM_PICK_OBJECT("请选择要删除的电气设备基座", tmp, "STRUCTCMP","BEAM","STANDCMP");
        if (!ISINT(picked_object_handle)){	   
            /*get name of cable tray support*/
            group_handle = PM_GET_OBJECT_GROUP(picked_object_handle,Group_Type_I);
            if (ISINT(group_handle)){
                U_CONFIRM("此零件不属于任何电气设备基座");	      	
                return(0);
            }	
            group_name = PM_GET_OBJDATA(group_handle,0,MMT_TAG_OBJNAME);
            /* check type of cable tray support */
            type = PM_GET_OBJDATA(group_handle, 0, SeatType);
            if(ISINT(type)){
                U_CONFIRM("此零件不属于任何电气设备基座");	
                return(0);
            }	
            else{
                check = STRINGTERM(type,"_");
                if(check != "EES"){
                    U_CONFIRM("此零件不属于任何电气设备基座");	
                    return(0);		         
                }
            }    	   
   	   
            /* 定义UNDO缓存 */
            st = PM_UM_OPEN_CHANGE("删除电缆电气设备基座:" + group_name);	 
      	  
            /* delete parts of cable tray support */
            seat_members = PM_GET_OBJECTS_IN_GROUP(group_handle);
            PM_DELETE_OBJECTS_IN_SET(seat_members, 0);  
            
            /* delete cable tray support group */   
            res = PM_DELETE_OBJECT(group_handle);
            /* if fail, trace back */
            if (res == -1){
                PM_UM_CLOSE_CHANGE();
                PM_UM_UNDO_LAST_CHANGE();
                return(0);
            }
            st = PM_UM_CLOSE_CHANGE();  	      	      						
   	    } 
   	    else{
   	        flag = 0;
   	    } 
   	}
    return(0);
}

license()
{
    if(!check_license()){
        U_CONFIRM("请使用正版软件！");
        return(0);
    }
    
    if(!check_date()){
        U_CONFIRM("软件已过有效期！");
        return(0);        
    }    
    return(1);
}

check_license()
{
    return(1);
}

check_date()
{
    year = 2019;
    month = 12;
    date = 31;
    
    current_time = GET_TIME();  
    current = CNV_DATE(current_time,7);
    int current_year;
    current_year = SCAN_QUANT(3,STRINGTERM(current,"-"));
    current = SUBSTRING(SEARCH(current,"-"),1);
    int current_month;
    current_month = SCAN_QUANT(3,STRINGTERM(current,"-"));
    int current_date;
    current_date = SCAN_QUANT(3,SUBSTRING(SEARCH(current,"-"),1));
    if(current_year > year){       
        return(0);
    }
    else if(current_month > month){
        return(0);
    }
    else if(current_date > date){
        return(0);
    }
    return(1);
}

